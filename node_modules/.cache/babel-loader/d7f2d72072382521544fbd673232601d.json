{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/App.js\";\nimport logo from './logo.svg';\nimport Header from './Header';\nimport Instruction from './Instruction';\nimport Question from './Question';\nimport Footer from './Footer';\nimport React from 'react';\nimport axios from 'axios';\nimport './App.css'; //path must be changed accordingly to the param query input\n\nimport XMLData from './xml/mc.xml'; //import './arrangeprotein.css'\n//import './bootstrap.min.css'\n//import './jquery.mobile-1.4.0.css'\n//import './mcstyle.css'\n//import './quiz.css'\n//import './reset.css'\n//import './css/style.css'\n\n/*\nPROBLEM:\n  WHEN DO WE RESET QUESTION NUM => WHEN THE BUTTON IS PRESSED\n  HOW DO WE SEND DATA FROM CHILD TO PARENTS IN REACT?\n\n  SEND DATA FROM CHILD TO PARENT == SEND A FUNCTION FROM PARENT TO CHILD FOR A CHILD TO RUN AND RETURN \n\n  LOOK FOR FORM.JS in name-job\n\nPROBLEM:\n  SEEM TO BE ASYNCHRONOUS FUNCTION CALLING PROBLEM OCCURING\n  STILL DO NOT KNOW HOW TO SOLVE IT...\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetched: false,\n      questionNum: 0,\n      questionTexts: [],\n      answers: []\n    };\n  }\n\n  goToNextQuestion() {\n    this.setState({\n      questionNum: this.state.questionNum + 1\n    });\n  }\n\n  componentDidMount() {\n    this.fetchQuestionsWithAxios();\n  }\n\n  fetchQuestionsWithAxios() {\n    axios.get(XMLData, {\n      \"Content-Type\": \"application/xml; charset=utf-8\"\n    }).then(response => {\n      console.log(\"mounting APP\");\n      const parser = new DOMParser();\n      var xml = parser.parseFromString(response.data, \"text/xml\");\n      var questionTexts = Array.from(xml.getElementsByTagName(\"questiontext\"));\n      var answers = Array.from(xml.getElementsByTagName(\"answer\"));\n      this.setState({\n        questionNum: 1,\n        questionTexts: questionTexts,\n        answers: answers,\n        isFetched: true\n      });\n    }).catch(e => {\n      console.log(e);\n      this.setState({ ...this.state,\n        isFetched: false\n      });\n    });\n  }\n\n  render() {\n    //console.log( this.state )\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Instruction, {\n        questionNum: this.state.questionNum,\n        changeQuestion: this.goToNextQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Question, {\n        questionNum: this.state.questionNum,\n        questionTexts: this.state.questionTexts,\n        answers: this.state.answers,\n        isFetched: this.state.isFetched\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/App.js"],"names":["logo","Header","Instruction","Question","Footer","React","axios","XMLData","App","Component","constructor","props","state","isFetched","questionNum","questionTexts","answers","goToNextQuestion","setState","componentDidMount","fetchQuestionsWithAxios","get","then","response","console","log","parser","DOMParser","xml","parseFromString","data","Array","from","getElementsByTagName","catch","e","render"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP,C,CACA;;AAEA,OAAOC,OAAP,MAAoB,cAApB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,WAAW,EAAE,CAFF;AAGXC,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAMD;;AAEDC,EAAAA,gBAAgB,GAAE;AAChB,SAAKC,QAAL,CAAc;AACZJ,MAAAA,WAAW,EAAG,KAAKF,KAAL,CAAWE,WAAX,GAAyB;AAD3B,KAAd;AAGD;;AAEDK,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,uBAAL;AACD;;AAEDA,EAAAA,uBAAuB,GAAE;AACvBd,IAAAA,KAAK,CAACe,GAAN,CAAUd,OAAV,EACE;AAAC,sBAAe;AAAhB,KADF,EAEGe,IAFH,CAESC,QAAD,IAAY;AAElBC,MAAAA,OAAO,CAACC,GAAR,CAAa,cAAb;AACA,YAAMC,MAAM,GAAG,IAAIC,SAAJ,EAAf;AACA,UAAIC,GAAG,GAAGF,MAAM,CAACG,eAAP,CAAuBN,QAAQ,CAACO,IAAhC,EAAqC,UAArC,CAAV;AACA,UAAIf,aAAa,GAAGgB,KAAK,CAACC,IAAN,CAAWJ,GAAG,CAACK,oBAAJ,CAAyB,cAAzB,CAAX,CAApB;AACA,UAAIjB,OAAO,GAAGe,KAAK,CAACC,IAAN,CAAWJ,GAAG,CAACK,oBAAJ,CAAyB,QAAzB,CAAX,CAAd;AAEA,WAAKf,QAAL,CAAc;AACVJ,QAAAA,WAAW,EAAE,CADH;AAEVC,QAAAA,aAAa,EAAEA,aAFL;AAGVC,QAAAA,OAAO,EAAEA,OAHC;AAIVH,QAAAA,SAAS,EAAC;AAJA,OAAd;AAMD,KAhBD,EAgBGqB,KAhBH,CAgBUC,CAAC,IAAI;AACbX,MAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ;AACA,WAAKjB,QAAL,CAAc,EAAC,GAAG,KAAKN,KAAT;AAAgBC,QAAAA,SAAS,EAAE;AAA3B,OAAd;AACD,KAnBD;AAoBD;;AAEDuB,EAAAA,MAAM,GAAE;AACN;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AACE,QAAA,WAAW,EAAE,KAAKxB,KAAL,CAAWE,WAD1B;AAEE,QAAA,cAAc,EAAE,KAAKG;AAFvB;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,QAAD;AACE,QAAA,WAAW,EAAE,KAAKL,KAAL,CAAWE,WAD1B;AAEE,QAAA,aAAa,EAAE,KAAKF,KAAL,CAAWG,aAF5B;AAGE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHtB;AAIE,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWC;AAJxB;AAAA;AAAA;AAAA;AAAA,cALF,eAWE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA9D+B;;AAiElC,eAAeL,GAAf","sourcesContent":["import logo from './logo.svg'\n\nimport Header from './Header'\nimport Instruction from './Instruction'\nimport Question from './Question';\nimport Footer from './Footer';\n\nimport React from 'react';\nimport axios from 'axios'\n\nimport './App.css';\n//path must be changed accordingly to the param query input\n\nimport XMLData from './xml/mc.xml'\n//import './arrangeprotein.css'\n//import './bootstrap.min.css'\n//import './jquery.mobile-1.4.0.css'\n//import './mcstyle.css'\n//import './quiz.css'\n//import './reset.css'\n//import './css/style.css'\n\n/*\nPROBLEM:\n  WHEN DO WE RESET QUESTION NUM => WHEN THE BUTTON IS PRESSED\n  HOW DO WE SEND DATA FROM CHILD TO PARENTS IN REACT?\n\n  SEND DATA FROM CHILD TO PARENT == SEND A FUNCTION FROM PARENT TO CHILD FOR A CHILD TO RUN AND RETURN \n\n  LOOK FOR FORM.JS in name-job\n\nPROBLEM:\n  SEEM TO BE ASYNCHRONOUS FUNCTION CALLING PROBLEM OCCURING\n  STILL DO NOT KNOW HOW TO SOLVE IT...\n*/\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      isFetched: false,\n      questionNum: 0,\n      questionTexts: [],\n      answers: []\n    }\n  }\n\n  goToNextQuestion(){\n    this.setState({\n      questionNum : this.state.questionNum + 1\n    })\n  }\n\n  componentDidMount(){\n    this.fetchQuestionsWithAxios()\n  }\n\n  fetchQuestionsWithAxios(){\n    axios.get(XMLData,\n      {\"Content-Type\":\"application/xml; charset=utf-8\"\n    }).then((response)=>{\n\n      console.log( \"mounting APP\")\n      const parser = new DOMParser()\n      var xml = parser.parseFromString(response.data,\"text/xml\")\n      var questionTexts = Array.from(xml.getElementsByTagName(\"questiontext\"))\n      var answers = Array.from(xml.getElementsByTagName(\"answer\"))\n\n      this.setState({\n          questionNum: 1,\n          questionTexts: questionTexts,\n          answers: answers,\n          isFetched:true\n      })\n    }).catch( e => {\n      console.log(e)\n      this.setState({...this.state, isFetched: false })\n    })\n  }\n\n  render(){\n    //console.log( this.state )\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Instruction\n          questionNum={this.state.questionNum}\n          changeQuestion={this.goToNextQuestion}/>\n        <Question\n          questionNum={this.state.questionNum}\n          questionTexts={this.state.questionTexts}\n          answers={this.state.answers}\n          isFetched={this.state.isFetched}\n        />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}