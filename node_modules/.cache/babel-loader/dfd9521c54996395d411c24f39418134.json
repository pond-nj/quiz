{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Question = props => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"question cf\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instruction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuestionText, {\n      props: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Choices, {\n      props: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Question;\n\nconst QuestionText = _ref => {\n  let {\n    props\n  } = _ref;\n\n  if (props.questionNum != -1) {\n    //-1 is start menu\n    return props.isFetched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-number\",\n        children: [\"Question \", props.questionNum + 1, \" out of 5\", props.Question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: props.questionTexts[props.questionNum].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Still Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n\n_c2 = QuestionText;\n\nconst Choices = _ref2 => {\n  let {\n    props\n  } = _ref2;\n  const choices = props.answers.filter((_, index) => {\n    return props.questionNum * 4 <= index && index <= props.questionNum * 4 + 3;\n  });\n  const correctAnswer = choices.filter((choice, index) => {\n    return choice.getAttribute(\"fraction\") == 1;\n  });\n  choices.forEach((choice, index) => {\n    console.log(choice.childNodes[1].textContent);\n    console.log(choice.getAttribute(\"fraction\"));\n  });\n  console.log(choices);\n\n  const ChoiceList = () => {\n    return choices.map((choice, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"answer-\" + props.questionNum,\n          id: \"answer-\" + index,\n          value: choice.childNodes[1].textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), console.log(\"answer-\" + props.questionNum), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"answer-\" + index,\n          className: \"hovereffect\",\n          children: choice.childNodes[1].textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback\",\n          id: \"feedback-\" + index,\n          style: {\n            display: \"block\"\n          },\n          children: \"Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    });\n  };\n\n  if (props.questionNum != -1) {\n    //-1 is start menu\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mc cf\",\n      onChange: event => {\n        props.setAnswer(event.target.id);\n      },\n      children: /*#__PURE__*/_jsxDEV(ChoiceList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c3 = Choices;\nexport default Question;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Question\");\n$RefreshReg$(_c2, \"QuestionText\");\n$RefreshReg$(_c3, \"Choices\");","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js"],"names":["React","Question","props","QuestionText","questionNum","isFetched","questionTexts","textContent","Choices","choices","answers","filter","_","index","correctAnswer","choice","getAttribute","forEach","console","log","childNodes","ChoiceList","map","display","event","setAnswer","target","id"],"mappings":"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","sourcesContent":["import React from \"react\"\n\nconst Question = (props) => {\n    return(\n        <section className=\"question cf\">\n            <p className=\"instruction\"></p>\n            <QuestionText props={props} />\n            <Choices props={props}/>\n            <p className=\"messages\"></p>\n        </section>\n    )\n}\n\nconst QuestionText = ({props}) => {\n    if( props.questionNum != -1 ){ //-1 is start menu\n        return (props.isFetched) ? (\n            <>\n                <p className=\"question-number\">Question {props.questionNum + 1} out of 5{props.Question}</p>\n                <p className=\"question\">{props.questionTexts[props.questionNum].textContent}</p> {/* THERE IS A PROBLEM AT THIS STAGE*/}\n            </>\n        ) : (<p>Still Loading..</p>)\n    } else { return <></> }\n}\n\nconst Choices = ({props}) => {\n    const choices = props.answers.filter( (_ , index) => {\n        return ((props.questionNum*4 <= index) && (index <= props.questionNum*4 + 3))\n    })\n\n    const correctAnswer = choices.filter( (choice, index) => {\n        return( choice.getAttribute(\"fraction\") == 1 )\n    })\n\n    choices.forEach( (choice, index) => {\n        console.log(choice.childNodes[1].textContent)\n        console.log(choice.getAttribute(\"fraction\"))\n    })\n\n    console.log( choices )\n\n    const ChoiceList = () => {\n        return choices.map( (choice, index) => {\n            return(\n                <>\n                    <input\n                        type=\"radio\"\n                        name={\"answer-\"+props.questionNum}\n                        id={\"answer-\"+index}\n                        value={choice.childNodes[1].textContent}/>\n                    {console.log(\"answer-\"+props.questionNum)}\n                    <label\n                        htmlFor={\"answer-\"+index}\n                        className=\"hovereffect\">\n                    {choice.childNodes[1].textContent}</label>\n                    <p\n                        className=\"feedback\"\n                        id={\"feedback-\"+index}\n                        style={{display:\"block\"}}>\n                    Feedback\n                    </p>\n                </>)\n        })\n    }\n\n    if( props.questionNum != -1 ){ //-1 is start menu\n        return(\n            <form className=\"mc cf\" onChange={ (event) => {\n                props.setAnswer(event.target.id)\n            }}>\n            <ChoiceList />\n            </form>)\n    }else return <></> \n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}