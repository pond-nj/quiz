{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js\";\nimport React from \"react\";\nimport Buttons from \"./Buttons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuestionText = _ref => {\n  let {\n    props\n  } = _ref;\n\n  if (props.questionNum != -1) {\n    //-1 is start menu\n    return props.isFetched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-number\",\n        children: [\"Question \", props.questionNum + 1, \" out of 5\", props.Question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: props.questionTexts[props.questionNum].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Still Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n\n_c = QuestionText;\n\nconst ChoiceList = _ref2 => {\n  let {\n    props\n  } = _ref2;\n  //filter choice for this question\n  const choices = props.answers.filter((_, index) => {\n    return props.questionNum * 4 <= index && index <= props.questionNum * 4 + 3;\n  });\n  var correctAnswer = \"\"; //setCorrectAnswer\n\n  choices.forEach((choice, index) => {\n    if (choice.getAttribute(\"fraction\") == 1) {\n      correctAnswer = \"answer-\" + index;\n    }\n  });\n  var selectedAnswer = \"\";\n  const ChoicesJSX = choices.map((choice, index) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"answer-\" + props.questionNum,\n        id: \"answer-\" + index,\n        value: choice.childNodes[1].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answer-\" + index,\n        className: \"hovereffect\",\n        children: choice.childNodes[1].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback\",\n        id: \"feedback-\" + index,\n        style: {\n          display: \"block\"\n        },\n        children: \"Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"mc cf\",\n    onChange: event => {\n      //setSelectedAnswer\n      selectedAnswer = event.target.id;\n      console.log(correctAnswer);\n      console.log(selectedAnswer);\n    },\n    children: ChoicesJSX\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ChoiceList;\n\nconst Choices = _ref3 => {\n  let {\n    props\n  } = _ref3;\n\n  if (props.questionNum != -1) {\n    //-1 is start menu\n    return /*#__PURE__*/_jsxDEV(ChoiceList, {\n      props: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c3 = Choices;\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"question cf\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instruction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(QuestionText, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Choices, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), console.log(props), /*#__PURE__*/_jsxDEV(Buttons, {\n        goToNextQuestion: props.goToNextQuestion,\n        goToPrevQuestion: props.goToPrevQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Question;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QuestionText\");\n$RefreshReg$(_c2, \"ChoiceList\");\n$RefreshReg$(_c3, \"Choices\");","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js"],"names":["React","Buttons","QuestionText","props","questionNum","isFetched","Question","questionTexts","textContent","ChoiceList","choices","answers","filter","_","index","correctAnswer","forEach","choice","getAttribute","selectedAnswer","ChoicesJSX","map","childNodes","display","event","target","id","console","log","Choices","Component","constructor","render","goToNextQuestion","goToPrevQuestion"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Buttons from \"./Buttons\"\n\nconst QuestionText = ({props}) => {\n    if( props.questionNum != -1 ){ //-1 is start menu\n        return (props.isFetched) ? (\n            <>\n                <p className=\"question-number\">Question {props.questionNum + 1} out of 5{props.Question}</p>\n                <p className=\"question\">{props.questionTexts[props.questionNum].textContent}</p> {/* THERE IS A PROBLEM AT THIS STAGE*/}\n            </>\n        ) : (<p>Still Loading..</p>)\n    } else { return <></> }\n}\n\nconst ChoiceList = ({props}) => {\n\n    //filter choice for this question\n    const choices = props.answers.filter( (_ , index) => {\n        return ((props.questionNum*4 <= index) && (index <= props.questionNum*4 + 3))\n    })\n\n    var correctAnswer = \"\"\n    //setCorrectAnswer\n    choices.forEach( (choice,index) => {\n      if( choice.getAttribute(\"fraction\") == 1 ){\n          correctAnswer = \"answer-\"+index\n      }  \n    })\n\n    var selectedAnswer = \"\"\n\n    const ChoicesJSX = choices.map( (choice, index) => {\n        return(\n            <>\n                <input\n                    type=\"radio\"\n                    name={\"answer-\"+props.questionNum}\n                    id={\"answer-\"+index}\n                    value={choice.childNodes[1].textContent}/>\n                <label\n                    htmlFor={\"answer-\"+index}\n                    className=\"hovereffect\">\n                {choice.childNodes[1].textContent}</label>\n                <p\n                    className=\"feedback\"\n                    id={\"feedback-\"+index}\n                    style={{display:\"block\"}}>\n                Feedback\n                </p>\n            </>)\n    })\n\n    return(\n        <form className=\"mc cf\" onChange={ (event) => {\n            //setSelectedAnswer\n            selectedAnswer = event.target.id\n            console.log( correctAnswer )\n            console.log( selectedAnswer )\n        }}>\n        {ChoicesJSX}\n        </form>\n    )\n}\n\nconst Choices = ({props}) => {\n\n    if( props.questionNum != -1 ){ //-1 is start menu\n        return(\n            <ChoiceList props={props}/>\n            )\n    }else return <></> \n}\n\nclass Question extends React.Component{\n    constructor(props){\n        super(props)\n        \n    }\n\n    render(){\n        return(\n        <>\n        <section className=\"question cf\">\n            <p className=\"instruction\"></p>\n            <QuestionText props={props} />\n            <Choices props={props}/>\n            <p className=\"messages\"></p>\n        </section>\n\n        {console.log(props)}\n        <Buttons\n          goToNextQuestion={props.goToNextQuestion}\n          goToPrevQuestion={props.goToPrevQuestion}/>\n        </>\n        )\n    }\n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}