{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js\";\nimport React, { useState } from \"react\";\nimport Buttons from \"./Buttons\"; //contain question text\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuestionText = _ref => {\n  let {\n    props\n  } = _ref;\n\n  const showQuestionText = () => {\n    const text = props.questionsList[props.questionNum].getElementsByTagName(\"questiontext\")[0].childNodes[0].textContent;\n    var br = \"<br/ >\"; // console.log(text.split(regex))\n\n    const textArr = text.split(br);\n    return textArr.map((line, index) => {\n      if (index != textArr.length - 1) return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", line, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, \"key_\" + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 64\n        }, this), \" \"]\n      }, void 0, true);else return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: line\n      }, void 0, false);\n    });\n  };\n\n  const showImage = () => {\n    const imgArr = props.questionsList[props.questionNum].getElementsByTagName(\"questiontext\")[0].getElementsByTagName(\"image\");\n    if (imgArr.length == 1) return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgArr[0].textContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 41\n    }, this);else return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  if (props.questionNum != -1) {\n    //-1 is start menu\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-number\",\n        children: [\"Question \", props.questionNum + 1, \" out of \", props.totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: showQuestionText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), showImage()]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n}; //display choices\n\n\n_c = QuestionText;\n\nconst ChoiceList = _ref2 => {\n  let {\n    props\n  } = _ref2;\n  // console.log( props.choices )\n  const ChoicesJSX = props.choices.map((choice, index) => {\n    // console.log(props.selectedAnswer)\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui-radio\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"answer-\" + index,\n          className: \"hovereffect ui-btn ui-corner-all ui-btn-inherit ui-btn-icon-left \" + (index == props.selectedAnswer ? \"ui-radio-on\" : \"ui-radio-off\"),\n          children: choice.childNodes[1].textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"answer-\" + props.questionNum,\n          index: index,\n          id: \"answer-\" + index,\n          value: choice.childNodes[1].textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback\",\n        id: \"feedback-\" + index,\n        style: {\n          display: props.selectedAnswer == index && props.correct != null ? \"block\" : \"none\"\n        },\n        children: choice.childNodes[3].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"mc cf\",\n    onChange: event => {\n      props.setCorrect(null);\n      props.setSelectedAnswer(event.target.getAttribute(\"index\"));\n    },\n    onClick: event => {\n      props.setCorrect(null);\n      props.setSelectedAnswer(event.target.getAttribute(\"index\"));\n    },\n    children: ChoicesJSX\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ChoiceList;\n\nconst Messages = _ref3 => {\n  let {\n    props\n  } = _ref3;\n  // console.log(props.selectedAnswer)\n  const Message = props.pressSubmit == 1 && props.selectedAnswer == -1 ? \"Please answer the above question.\" : \"\";\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"messages\",\n    children: Message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 13\n  }, this);\n};\n\n_c3 = Messages;\n\nconst Question = _ref4 => {\n  let {\n    props\n  } = _ref4;\n\n  //console.log( props )\n  // console.log( props.questionNum )\n  if (props.questionNum != -1 && props.questionNum < props.questionsList.length) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"question cf\",\n        children: [/*#__PURE__*/_jsxDEV(QuestionText, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ChoiceList, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Messages, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        goToNextQuestion: props.goToNextQuestion,\n        goToPrevQuestion: props.goToPrevQuestion,\n        correctAnswer: props.choices.map((choice, _) => {\n          return choice.getAttribute(\"fraction\") == 1;\n        }).indexOf(true),\n        setCorrect: props.setCorrect,\n        selectedAnswer: props.selectedAnswer,\n        correct: props.correct,\n        setSubmit: props.setSubmit,\n        pressSubmit: props.pressSubmit,\n        resetSelected: props.resetSelected,\n        questionsList: props.questionsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else if (props.questionNum == props.questionsList.length) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"question cf\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instruction\",\n          children: [\"This is the end of the exercise. Thank you!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), \"Close the window to go back to the course.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        goToNextQuestion: props.goToNextQuestion,\n        goToPrevQuestion: props.goToPrevQuestion,\n        correctAnswer: props.choices.map((choice, _) => {\n          return choice.getAttribute(\"fraction\") == 1;\n        }).indexOf(true),\n        setCorrect: props.setCorrect,\n        selectedAnswer: props.selectedAnswer,\n        correct: props.correct,\n        setSubmit: props.setSubmit,\n        pressSubmit: props.pressSubmit,\n        resetSelected: props.resetSelected,\n        questionsList: props.questionsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n\n_c4 = Question;\nexport default Question;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"QuestionText\");\n$RefreshReg$(_c2, \"ChoiceList\");\n$RefreshReg$(_c3, \"Messages\");\n$RefreshReg$(_c4, \"Question\");","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js"],"names":["React","useState","Buttons","QuestionText","props","showQuestionText","text","questionsList","questionNum","getElementsByTagName","childNodes","textContent","br","textArr","split","map","line","index","length","showImage","imgArr","totalQuestions","ChoiceList","ChoicesJSX","choices","choice","selectedAnswer","display","correct","event","setCorrect","setSelectedAnswer","target","getAttribute","Messages","Message","pressSubmit","Question","goToNextQuestion","goToPrevQuestion","_","indexOf","setSubmit","resetSelected"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport Buttons from \"./Buttons\"\n\n//contain question text\nconst QuestionText = ({props}) => {\n    const showQuestionText = () => {\n        const text = props.questionsList[props.questionNum].getElementsByTagName(\"questiontext\")[0].childNodes[0].textContent\n        var br = \"<br/ >\";\n        // console.log(text.split(regex))\n        const textArr = text.split(br)\n        return textArr.map((line, index) => {\n            if( index != textArr.length-1 ) return  (<> {line} <br key={\"key_\" + index} /> </>)\n            else return (<>{line}</>)\n        })\n\n    }\n\n    const showImage = () => {\n        const imgArr = props.questionsList[props.questionNum].getElementsByTagName(\"questiontext\")[0].getElementsByTagName(\"image\")\n        if( imgArr.length == 1 ) return <img src={imgArr[0].textContent}/>\n        else return <></>\n    }\n\n    if( props.questionNum != -1 ){ //-1 is start menu\n        return (<>\n            <p className=\"question-number\">Question {props.questionNum + 1} out of {props.totalQuestions}</p>\n            {/* {console.log(props.questionsList[props.questionNum].childNodes[1])} */}\n            <p className=\"question\">{showQuestionText()}</p>\n            {showImage()}\n        </>)\n\n    } else { return <></> }\n}\n\n//display choices\nconst ChoiceList = ({props}) => {\n    // console.log( props.choices )\n\n    const ChoicesJSX = props.choices.map( (choice, index) => {\n        // console.log(props.selectedAnswer)\n        return(\n            <>\n                <div className=\"ui-radio\">\n                <label\n                    htmlFor={\"answer-\"+index}\n                    className={\"hovereffect ui-btn ui-corner-all ui-btn-inherit ui-btn-icon-left \"+((index==props.selectedAnswer)? \"ui-radio-on\":\"ui-radio-off\")}>\n                {choice.childNodes[1].textContent}\n                </label>\n                <input\n                    type=\"radio\"\n                    name={\"answer-\"+props.questionNum}\n                    index={index}\n                    id={\"answer-\"+index}\n                    value={choice.childNodes[1].textContent}/>\n                </div>\n                <p\n                    className=\"feedback\"\n                    id={\"feedback-\"+index}\n                    style={{display: ( (props.selectedAnswer == index) && (props.correct != null )) ? \"block\" : \"none\"}}>\n                {choice.childNodes[3].textContent}\n                </p>\n            </>)\n    })\n\n    return(\n        <form className=\"mc cf\" onChange={(event) => {\n            props.setCorrect(null)\n            props.setSelectedAnswer(event.target.getAttribute(\"index\"))}\n            }\n\n            onClick={(event) => {\n                props.setCorrect(null)\n                props.setSelectedAnswer(event.target.getAttribute(\"index\"))}\n            }\n            >\n        {ChoicesJSX}\n        </form>\n    )\n}\n\nconst Messages = ({props}) => {\n    // console.log(props.selectedAnswer)\n    const Message = (props.pressSubmit == 1 && props.selectedAnswer == -1)? \"Please answer the above question.\" : \"\"\n\n    return (<p className=\"messages\">{Message}</p>)\n}\n\nconst Question = ({props}) => {\n    //console.log( props )\n    // console.log( props.questionNum )\n    if( props.questionNum != - 1 && props.questionNum < props.questionsList.length ){\n        return(<>\n            <section className=\"question cf\">\n                <QuestionText props={props} />\n                <ChoiceList props={props}/>\n                <Messages props = {props}/>\n            </section>\n\n            <Buttons\n                goToNextQuestion={props.goToNextQuestion}\n                goToPrevQuestion={props.goToPrevQuestion}\n                correctAnswer={props.choices.map( ( choice, _ ) => {\n                    return( choice.getAttribute(\"fraction\") == 1 )\n                }).indexOf(true)}\n                setCorrect={props.setCorrect}\n                selectedAnswer={props.selectedAnswer}\n                correct={props.correct}\n                setSubmit={props.setSubmit}\n                pressSubmit={props.pressSubmit}\n                resetSelected={props.resetSelected}\n                questionsList={props.questionsList}\n            />\n        </>)\n    }else if( props.questionNum == props.questionsList.length ){\n        return(<>\n            <section className=\"question cf\">\n                <p className=\"instruction\">This is the end of the exercise. Thank you!\n                <br/>\n                <br/>\n                Close the window to go back to the course.</p>\n            </section>\n            <Buttons\n                goToNextQuestion={props.goToNextQuestion}\n                goToPrevQuestion={props.goToPrevQuestion}\n                correctAnswer={props.choices.map( ( choice, _ ) => {\n                    return( choice.getAttribute(\"fraction\") == 1 )\n                }).indexOf(true)}\n                setCorrect={props.setCorrect}\n                selectedAnswer={props.selectedAnswer}\n                correct={props.correct}\n                setSubmit={props.setSubmit}\n                pressSubmit={props.pressSubmit}\n                resetSelected={props.resetSelected}\n                questionsList={props.questionsList}\n            />\n        </>)\n    }else { return(<></>)}\n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}