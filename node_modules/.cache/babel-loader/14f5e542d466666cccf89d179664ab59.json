{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js\";\nimport React from \"react\";\nimport axios from 'axios'; //path must be changed accordingly to the param query input\n\nimport XMLData from './xml/mc.xml';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Question extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      questionText: \"\",\n      questionNum: this.props.questionNum,\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\",\n      answer4: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const questionNum = this.state.questionNum;\n    axios.get(XMLData, {\n      \"Content-Type\": \"application/xml; charset=utf-8\"\n    }).then(response => {\n      //there is no need to parse this everytime there is a mount,\n      //only need to parse it when the page is loaded\n      const parser = new DOMParser();\n      var xml = parser.parseFromString(response.data, \"text/xml\");\n      var question = xml.getElementsByTagName(\"questiontext\")[questionNum];\n      var answers = xml.getElementsByTagName(\"answer\"); //var an = answers.slice(questionNum, questionNum+4)\n      //console.log( an )\n      //.innerHTML <= should I use innerHTML??\n      //should I change parse xml as a string or as an JSX object?\n      //var answers = xml.getElementsByTagName(\"\")\n      //do we have to set every state again??\n\n      this.setState({\n        questionText: question.childNodes[0].nodeValue,\n        questionNum: questionNum,\n        answer1: answers[questionNum * 4],\n        answer2: answers[questionNum * 4 + 1],\n        answer3: answers[questionNum * 4 + 2],\n        answer4: answers[questionNum * 4 + 3]\n      });\n      console.log(this.state.questionText);\n      console.log(this.state.answer1.childNodes[0]);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"question cf\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instruction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-number\",\n        children: this.state.questionNum + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: this.state.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mc cf\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"\",\n          id: \"answer-0\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"answer-0\",\n          className: \"hovereffect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback\",\n          id: \"feedback-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"\",\n          id: \"answer-1\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"answer-1\",\n          className: \"hovereffect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback\",\n          id: \"feedback-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"\",\n          id: \"answer-2\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"answer-2\",\n          className: \"hovereffect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback\",\n          id: \"feedback-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"\",\n          id: \"answer-3\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"answer-3\",\n          className: \"hovereffect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback\",\n          id: \"feedback-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js"],"names":["React","axios","XMLData","Question","Component","state","questionText","questionNum","props","answer1","answer2","answer3","answer4","componentDidMount","get","then","response","parser","DOMParser","xml","parseFromString","data","question","getElementsByTagName","answers","setState","childNodes","nodeValue","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,cAApB;;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAGlCC,KAHkC,GAG1B;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAFpB;AAGJE,MAAAA,OAAO,EAAE,EAHL;AAIJC,MAAAA,OAAO,EAAE,EAJL;AAKJC,MAAAA,OAAO,EAAE,EALL;AAMJC,MAAAA,OAAO,EAAE;AANL,KAH0B;AAAA;;AAalCC,EAAAA,iBAAiB,GAAE;AACf,UAAMN,WAAW,GAAG,KAAKF,KAAL,CAAWE,WAA/B;AACAN,IAAAA,KAAK,CAACa,GAAN,CAAUZ,OAAV,EACI;AAAC,sBAAe;AAAhB,KADJ,EAEGa,IAFH,CAESC,QAAD,IAAY;AAChB;AACA;AACA,YAAMC,MAAM,GAAG,IAAIC,SAAJ,EAAf;AACA,UAAIC,GAAG,GAAGF,MAAM,CAACG,eAAP,CAAuBJ,QAAQ,CAACK,IAAhC,EAAqC,UAArC,CAAV;AACA,UAAIC,QAAQ,GAAGH,GAAG,CAACI,oBAAJ,CAAyB,cAAzB,EAAyChB,WAAzC,CAAf;AACA,UAAIiB,OAAO,GAAGL,GAAG,CAACI,oBAAJ,CAAyB,QAAzB,CAAd,CANgB,CAOhB;AACA;AACA;AACA;AACA;AAEA;;AACA,WAAKE,QAAL,CAAc;AACVnB,QAAAA,YAAY,EAAEgB,QAAQ,CAACI,UAAT,CAAoB,CAApB,EAAuBC,SAD3B;AAEVpB,QAAAA,WAAW,EAAEA,WAFH;AAGVE,QAAAA,OAAO,EAAEe,OAAO,CAACjB,WAAW,GAAC,CAAb,CAHN;AAIVG,QAAAA,OAAO,EAAEc,OAAO,CAACjB,WAAW,GAAC,CAAZ,GAAe,CAAhB,CAJN;AAKVI,QAAAA,OAAO,EAAEa,OAAO,CAACjB,WAAW,GAAC,CAAZ,GAAe,CAAhB,CALN;AAMVK,QAAAA,OAAO,EAAEY,OAAO,CAACjB,WAAW,GAAC,CAAZ,GAAe,CAAhB;AANN,OAAd;AAQAqB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxB,KAAL,CAAWC,YAAvB;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxB,KAAL,CAAWI,OAAX,CAAmBiB,UAAnB,CAA8B,CAA9B,CAAZ;AACH,KA1BD;AA2BH;;AAEDI,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,kBAAgC,KAAKzB,KAAL,CAAWE,WAAX,GAAuB;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA,kBAAyB,KAAKF,KAAL,CAAWC;AAApC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,EAFT;AAEY,UAAA,EAAE,EAAC,UAFf;AAGI,UAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AACI,UAAA,OAAO,EAAC,UADZ;AAEI,UAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI;AACI,UAAA,SAAS,EAAC,UADd;AAEI,UAAA,EAAE,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,gBATJ,eAaI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,EAFT;AAGI,UAAA,EAAE,EAAC,UAHP;AAII,UAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAkBI;AACI,UAAA,OAAO,EAAC,UADZ;AAEI,UAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAsBI;AACI,UAAA,SAAS,EAAC,UADd;AAEI,UAAA,EAAE,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eA0BI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,EAFT;AAGI,UAAA,EAAE,EAAC,UAHP;AAII,UAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,gBA1BJ,eA+BI;AACI,UAAA,OAAO,EAAC,UADZ;AAEI,UAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,gBA/BJ,eAmCI;AACI,UAAA,SAAS,EAAC,UADd;AAEI,UAAA,EAAE,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,gBAnCJ,eAuCI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,EAFT;AAGI,UAAA,EAAE,EAAC,UAHP;AAII,UAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,gBAvCJ,eA4CI;AACI,UAAA,OAAO,EAAC,UADZ;AAEI,UAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,gBA5CJ,eAgDI;AACI,UAAA,SAAS,EAAC,UADd;AAEI,UAAA,EAAE,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,gBAhDJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAyDI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAzDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA6DH;;AA1GiC;;AA6GtC,eAAeH,QAAf","sourcesContent":["import React from \"react\"\nimport axios from 'axios'\n\n//path must be changed accordingly to the param query input\nimport XMLData from './xml/mc.xml'\n\nclass Question extends React.Component{\n\n    //questionNum = this.props.questionNum\n    state = {\n        questionText: \"\",\n        questionNum: this.props.questionNum,\n        answer1: \"\",\n        answer2: \"\",\n        answer3: \"\",\n        answer4: \"\"\n    }\n\n\n    componentDidMount(){\n        const questionNum = this.state.questionNum\n        axios.get(XMLData,\n            {\"Content-Type\":\"application/xml; charset=utf-8\"\n        }).then((response)=>{\n            //there is no need to parse this everytime there is a mount,\n            //only need to parse it when the page is loaded\n            const parser = new DOMParser()\n            var xml = parser.parseFromString(response.data,\"text/xml\")\n            var question = xml.getElementsByTagName(\"questiontext\")[questionNum]\n            var answers = xml.getElementsByTagName(\"answer\")\n            //var an = answers.slice(questionNum, questionNum+4)\n            //console.log( an )\n            //.innerHTML <= should I use innerHTML??\n            //should I change parse xml as a string or as an JSX object?\n            //var answers = xml.getElementsByTagName(\"\")\n\n            //do we have to set every state again??\n            this.setState({\n                questionText: question.childNodes[0].nodeValue,\n                questionNum: questionNum,\n                answer1: answers[questionNum*4],\n                answer2: answers[questionNum*4 +1],\n                answer3: answers[questionNum*4 +2],\n                answer4: answers[questionNum*4 +3]\n            })\n            console.log(this.state.questionText)\n            console.log(this.state.answer1.childNodes[0])\n        })\n    }\n\n    render(){\n        return(\n            <section className=\"question cf\">\n                <p className=\"instruction\"></p>\n                <p className=\"question-number\">{this.state.questionNum+1}</p>\n                <p className=\"question\">{this.state.questionText}</p>\t\n                <form className=\"mc cf\">\n                    <input\n                        type=\"radio\"\n                        name=\"\" id=\"answer-0\"\n                        value=\"\"/>\n                    <label\n                        htmlFor=\"answer-0\"\n                        className=\"hovereffect\">\n                    </label>\n                    <p\n                        className=\"feedback\"\n                        id=\"feedback-0\">\n                    </p>\n                    <input\n                        type=\"radio\"\n                        name=\"\"\n                        id=\"answer-1\"\n                        value=\"\"/>\n                    <label\n                        htmlFor=\"answer-1\"\n                        className=\"hovereffect\">\n                    </label>\n                    <p\n                        className=\"feedback\"\n                        id=\"feedback-1\">\n                    </p>\n                    <input\n                        type=\"radio\"\n                        name=\"\"\n                        id=\"answer-2\"\n                        value=\"\"/>\n                    <label\n                        htmlFor=\"answer-2\"\n                        className=\"hovereffect\">\n                    </label>\n                    <p\n                        className=\"feedback\"\n                        id=\"feedback-2\">\n                    </p>\n                    <input\n                        type=\"radio\"\n                        name=\"\"\n                        id=\"answer-3\"\n                        value=\"\"/>\n                    <label\n                        htmlFor=\"answer-3\"\n                        className=\"hovereffect\">\n                    </label>\n                    <p\n                        className=\"feedback\"\n                        id=\"feedback-3\">\n                    </p>\n                </form>\n                <p className=\"messages\"></p>\n            </section>\n        )\n    }\n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}