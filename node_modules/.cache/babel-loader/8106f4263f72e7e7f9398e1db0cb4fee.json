{"ast":null,"code":"import _classCallCheck from\"/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import Header from'./Header';import React from'react';import axios from'axios';import XMLData from'./xml/mc.xml';import'./mcstyle.css';import PageManager from'./PageManager';/*\nNeed Updates:\n  Cannot click choice yet if reply button has not been pressed\n\n  Have to implement Last page after complete all questions\n  //review correct answer => display all correct answer\n\n  Additional features\n    1. Transition from feedback block:none to block:display\n    2. hide feedback (correct/ uncorrect) in chrome dev tools\n    3. (For self entertainment) Save individual's score to database\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.setSubmit=function(state){_this.setState({pressSubmit:state});};_this.setStartReview=function(state){_this.setState({startReview:state});};_this.resetSelected=function(){_this.setState({correct:null,selectedAnswer:-1,pressSubmit:0});};_this.goToQuestion=function(num){_this.setState({questionNum:num});};_this.goToNextQuestion=function(){_this.setState({questionNum:_this.state.questionNum+1,correct:null,selectedAnswer:-1,pressSubmit:0});};_this.goToPrevQuestion=function(){_this.setState({questionNum:_this.state.questionNum-1,correct:null,selectedAnswer:-1,pressSubmit:0});};_this.setCorrect=function(state){_this.setState({correct:state});};_this.setSelectedAnswer=function(answer){_this.setState({selectedAnswer:answer,pressSubmit:0});};_this.state={questionsList:[],questionNum:-1,//0 to total no. of question-1, 0 is the first question\nanswersList:[],selectedAnswer:-1,correct:null,pressSubmit:0,// = 1 when submit button is press, use to show message when press submit but no answer is selected\nstartReview:-1// = 1 when all questions are answered\n};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchQuestionsWithAxios();}},{key:\"fetchQuestionsWithAxios\",value:function fetchQuestionsWithAxios(){var _this2=this;axios.get(XMLData,{\"Content-Type\":\"application/xml; charset=utf-8\"}).then(function(response){console.log(response.data);var parser=new DOMParser();var xml=parser.parseFromString(response.data,\"text/xml\");var questionsList=Array.from(xml.getElementsByTagName(\"question\"));console.log(questionsList[3].getElementsByTagName(\"questiontext\")[0].childNodes[0].textContent);//shuffle elements in an array\nvar shuffle=function shuffle(array){var currentIndex=array.length,randomIndex;// While there remain elements to shuffle...\nwhile(currentIndex!=0){// Pick a remaining element...\nrandomIndex=Math.floor(Math.random()*currentIndex);currentIndex--;// And swap it with the current element.\nvar _ref=[array[randomIndex],array[currentIndex]];array[currentIndex]=_ref[0];array[randomIndex]=_ref[1];}return array;};var answersList=[];for(var i=0;i<questionsList.length;i++){var answers=Array.from(questionsList[i].getElementsByTagName(\"answer\"));if(questionsList[i].getAttribute(\"randomanswer\").localeCompare(\"true\")==0){shuffle(answers);}// console.log( answers )\nanswersList.push(answers);}_this2.setState({questionsList:questionsList,answersList:answersList});}).catch(function(e){console.log(e);});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{id:\"wrapper\",\"data-role\":\"content\",children:/*#__PURE__*/_jsx(PageManager,{questionNum:this.state.questionNum,questionsList:this.state.questionsList,choices:this.state.answersList[this.state.questionNum],totalQuestions:this.state.answersList.length,selectedAnswer:this.state.selectedAnswer,correct:this.state.correct,pressSubmit:this.state.pressSubmit,startReview:this.state.startReview,goToNextQuestion:this.goToNextQuestion,goToPrevQuestion:this.goToPrevQuestion,goToQuestion:this.goToQuestion,setSelectedAnswer:this.setSelectedAnswer,setCorrect:this.setCorrect,setSubmit:this.setSubmit,resetSelected:this.resetSelected,setStartReview:this.setStartReview})})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/App.js"],"names":["Header","React","axios","XMLData","PageManager","App","props","setSubmit","state","setState","pressSubmit","setStartReview","startReview","resetSelected","correct","selectedAnswer","goToQuestion","num","questionNum","goToNextQuestion","goToPrevQuestion","setCorrect","setSelectedAnswer","answer","questionsList","answersList","fetchQuestionsWithAxios","get","then","response","console","log","data","parser","DOMParser","xml","parseFromString","Array","from","getElementsByTagName","childNodes","textContent","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","i","answers","getAttribute","localeCompare","push","catch","e","Component"],"mappings":"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","sourcesContent":["import Header from './Header'\nimport React from 'react'\nimport axios from 'axios'\n\nimport XMLData from './xml/mc.xml'\nimport './mcstyle.css'\nimport PageManager from './PageManager'\n\n/*\nNeed Updates:\n  Cannot click choice yet if reply button has not been pressed\n\n  Have to implement Last page after complete all questions\n  //review correct answer => display all correct answer\n\n  Additional features\n    1. Transition from feedback block:none to block:display\n    2. hide feedback (correct/ uncorrect) in chrome dev tools\n    3. (For self entertainment) Save individual's score to database\n*/\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      questionsList: [],\n      questionNum: -1, //0 to total no. of question-1, 0 is the first question\n      answersList: [],\n      selectedAnswer: -1,\n      correct: null,\n      pressSubmit: 0, // = 1 when submit button is press, use to show message when press submit but no answer is selected\n      startReview: -1 // = 1 when all questions are answered\n    }\n  }\n\n  setSubmit = (state) => { this.setState({\n      pressSubmit: state\n    })}\n\n  setStartReview = (state) => { this.setState({\n    startReview: state\n    })}\n\n  resetSelected = () => { this.setState({\n      correct: null,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })}\n\n  goToQuestion = (num) => {this.setState({\n    questionNum: num\n  })}\n\n  goToNextQuestion = () => { this.setState({\n      questionNum : this.state.questionNum + 1,\n      correct: null,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })}\n\n  goToPrevQuestion = () => { this.setState({\n      questionNum : this.state.questionNum - 1, \n      correct: null,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })}\n\n\n  setCorrect = (state) => { this.setState({\n      correct: state\n    })}\n\n  setSelectedAnswer = (answer) => { this.setState({\n      selectedAnswer: answer,\n      pressSubmit: 0\n    })}\n\n  componentDidMount(){\n    this.fetchQuestionsWithAxios()\n  }\n\n  fetchQuestionsWithAxios(){\n    axios.get(XMLData,\n      {\"Content-Type\":\"application/xml; charset=utf-8\"\n    }).then((response)=>{\n      console.log(response.data)\n      const parser = new DOMParser()\n      var xml = parser.parseFromString(response.data,\"text/xml\")\n    \n      var questionsList = Array.from(xml.getElementsByTagName(\"question\"))\n      console.log(questionsList[3].getElementsByTagName(\"questiontext\")[0].childNodes[0].textContent)\n\n      //shuffle elements in an array\n      const shuffle = (array) => {\n        var currentIndex = array.length,  randomIndex;\n        // While there remain elements to shuffle...\n        while (currentIndex != 0) {\n          // Pick a remaining element...\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex--;\n          // And swap it with the current element.\n          [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n        }\n        return array;\n      }\n\n      var answersList = []\n      for( var i = 0 ; i < questionsList.length ; i++ ){\n        var answers = Array.from( questionsList[i].getElementsByTagName(\"answer\") )\n        if( questionsList[i].getAttribute(\"randomanswer\").localeCompare(\"true\") == 0 ){\n          shuffle( answers )\n        }\n        // console.log( answers )\n        answersList.push( answers )\n      }\n\n      this.setState({\n          questionsList: questionsList,\n          answersList: answersList,\n      })\n    }).catch( e => {\n      console.log(e)\n    })\n  }\n\n  render(){\n\n    return (\n      <div className=\"App\">\n        <Header/>\n        <div id =\"wrapper\" data-role=\"content\">\n          <PageManager\n            questionNum={this.state.questionNum}\n            questionsList={this.state.questionsList}\n            choices = {this.state.answersList[this.state.questionNum]}\n            totalQuestions={this.state.answersList.length}\n            selectedAnswer={this.state.selectedAnswer}\n            correct={this.state.correct}\n            pressSubmit={this.state.pressSubmit}\n            startReview={this.state.startReview}\n\n            goToNextQuestion={this.goToNextQuestion}\n            goToPrevQuestion={this.goToPrevQuestion}\n            goToQuestion={this.goToQuestion}\n            setSelectedAnswer={this.setSelectedAnswer}\n            setCorrect={this.setCorrect}\n            setSubmit={this.setSubmit}\n            resetSelected={this.resetSelected}\n            setStartReview={this.setStartReview}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}