{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Question extends React.Component {\n  //if needed to be load => should not be put in constructor??\n  //load initial state => \n  constructor(props) {\n    super(props);\n  }\n\n  componentDidUpdate() {\n    const Choices = this.props.answers.filter((_, index) => {\n      return this.props.questionNum * 4 <= index && index <= this.props.questionNum * 4 + 3;\n    });\n    console.log(this.props.answers);\n    const ChoiceDisplay = Choices.map((choice, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"\",\n          id: \"answer-\" + index,\n          value: choice.childNodes[1].textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"answer-\" + index,\n          className: \"hovereffect\",\n          children: choice.childNodes[1].textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback\",\n          id: \"feedback-\" + index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    });\n    this.setState({\n      Choices: Choices,\n      ChoiceDisplay: ChoiceDisplay\n    });\n  }\n\n  show() {\n    return this.props.isFetched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-number\",\n        children: this.props.questionNum + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: this.props.questionTexts[this.props.questionNum].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mc cf\",\n        children: this.ChoiceDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Still Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 14\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"question cf\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instruction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), this.show(), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js"],"names":["React","Question","Component","constructor","props","componentDidUpdate","Choices","answers","filter","_","index","questionNum","console","log","ChoiceDisplay","map","choice","childNodes","textContent","setState","show","isFetched","questionTexts","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAEnC;AACA;AAEAC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDC,EAAAA,kBAAkB,GAAE;AAEhB,UAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,MAAnB,CAA2B,CAACC,CAAD,EAAKC,KAAL,KAAe;AACtD,aAAS,KAAKN,KAAL,CAAWO,WAAX,GAAuB,CAAvB,IAA4BD,KAA7B,IAAwCA,KAAK,IAAI,KAAKN,KAAL,CAAWO,WAAX,GAAuB,CAAvB,GAA2B,CAApF;AACH,KAFe,CAAhB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAKT,KAAL,CAAWG,OAAxB;AAEA,UAAMO,aAAa,GAAGR,OAAO,CAACS,GAAR,CAAa,CAACC,MAAD,EAASN,KAAT,KAAmB;AAClD,0BACI;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,EAFT;AAGI,UAAA,EAAE,EAAE,YAAUA,KAHlB;AAII,UAAA,KAAK,EAAEM,MAAM,CAACC,UAAP,CAAkB,CAAlB,EAAqBC;AAJhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AACI,UAAA,OAAO,EAAE,YAAUR,KADvB;AAEI,UAAA,SAAS,EAAC,aAFd;AAAA,oBAGCM,MAAM,CAACC,UAAP,CAAkB,CAAlB,EAAqBC;AAHtB;AAAA;AAAA;AAAA;AAAA,gBANJ,eAUI;AACI,UAAA,SAAS,EAAC,UADd;AAEI,UAAA,EAAE,EAAE,cAAYR;AAFpB;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA,sBADJ;AAiBH,KAlBqB,CAAtB;AAoBA,SAAKS,QAAL,CAAc;AACVb,MAAAA,OAAO,EAAEA,OADC;AAEVQ,MAAAA,aAAa,EAAGA;AAFN,KAAd;AAIH;;AAEDM,EAAAA,IAAI,GAAE;AACF,WAAO,KAAKhB,KAAL,CAAWiB,SAAX,gBACH;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,kBAAgC,KAAKjB,KAAL,CAAWO,WAAX,GAAuB;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA,kBAAyB,KAAKP,KAAL,CAAWkB,aAAX,CAAyB,KAAKlB,KAAL,CAAWO,WAApC,EAAiDO;AAA1E;AAAA;AAAA;AAAA;AAAA,cAFJ,oBAGI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA,kBACK,KAAKJ;AADV;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBADG,gBAQF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARL;AASH;;AAEDS,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKH,IAAL,EAFL,eAGI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA9DkC;;AAiEvC,eAAenB,QAAf","sourcesContent":["import React from \"react\"\n\n\nclass Question extends React.Component {\n\n    //if needed to be load => should not be put in constructor??\n    //load initial state => \n\n    constructor(props){\n        super(props)\n    }\n\n    componentDidUpdate(){\n\n        const Choices = this.props.answers.filter( (_ , index) => {\n            return ((this.props.questionNum*4 <= index) && (index <= this.props.questionNum*4 + 3))\n        })\n        console.log( this.props.answers )\n\n        const ChoiceDisplay = Choices.map( (choice, index) => {\n            return(\n                <>\n                    <input\n                        type=\"radio\"\n                        name=\"\"\n                        id={\"answer-\"+index}\n                        value={choice.childNodes[1].textContent}/>\n                    <label\n                        htmlFor={\"answer-\"+index}\n                        className=\"hovereffect\">\n                    {choice.childNodes[1].textContent}</label>\n                    <p\n                        className=\"feedback\"\n                        id={\"feedback-\"+index}>\n                    </p>\n                </>\n            )\n        })\n\n        this.setState({\n            Choices: Choices,\n            ChoiceDisplay : ChoiceDisplay\n        })\n    }\n\n    show(){\n        return this.props.isFetched ? (\n            <>\n                <p className=\"question-number\">{this.props.questionNum+1}</p>\n                <p className=\"question\">{this.props.questionTexts[this.props.questionNum].textContent}</p> {/* THERE IS A PROBLEM AT THIS STAGE*/}\n                <form className=\"mc cf\">\n                    {this.ChoiceDisplay}\n                </form>\n            </>\n        ) : (<p>Still Loading..</p>)\n    }\n\n    render(){\n        return(\n            <section className=\"question cf\">\n                <p className=\"instruction\"></p>\n                {this.show()}\n                <p className=\"messages\"></p>\n            </section>\n        )\n    }\n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}