{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Question = props => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"question cf\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instruction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuestionText, {\n      props: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Choices, {\n      props: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Question;\n\nconst QuestionText = _ref => {\n  let {\n    props\n  } = _ref;\n\n  if (props.questionNum != -1) {\n    //-1 is start menu\n    return props.isFetched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-number\",\n        children: [\"Question \", props.questionNum + 1, \" out of 5\", props.Question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: props.questionTexts[props.questionNum].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Still Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n\n_c2 = QuestionText;\n\nconst ChoiceList = _ref2 => {\n  let {\n    props\n  } = _ref2;\n  const choices = props.answers.filter((_, index) => {\n    return props.questionNum * 4 <= index && index <= props.questionNum * 4 + 3;\n  });\n  const correctAnswer = choices.filter((choice, index) => {\n    return choice.getAttribute(\"fraction\") == 1;\n  })[0].childNodes[1].textContent; //get text value of the correct Answer\n\n  console.log(correctAnswer);\n  return choices.map((choice, index) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"answer-\" + props.questionNum,\n        id: \"answer-\" + index,\n        value: choice.childNodes[1].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), console.log(\"answer-\" + props.questionNum), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answer-\" + index,\n        className: \"hovereffect\",\n        children: choice.childNodes[1].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback\",\n        id: \"feedback-\" + index,\n        style: {\n          display: \"block\"\n        },\n        children: \"Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  });\n};\n\n_c3 = ChoiceList;\n\nconst Choices = _ref3 => {\n  let {\n    props\n  } = _ref3;\n\n  if (props.questionNum != -1) {\n    //-1 is start menu\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mc cf\",\n      onChange: event => {\n        props.setAnswer(event.target.id);\n      },\n      children: /*#__PURE__*/_jsxDEV(ChoiceList, {\n        props: props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c4 = Choices;\nexport default Question;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Question\");\n$RefreshReg$(_c2, \"QuestionText\");\n$RefreshReg$(_c3, \"ChoiceList\");\n$RefreshReg$(_c4, \"Choices\");","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js"],"names":["React","Question","props","QuestionText","questionNum","isFetched","questionTexts","textContent","ChoiceList","choices","answers","filter","_","index","correctAnswer","choice","getAttribute","childNodes","console","log","map","display","Choices","event","setAnswer","target","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,sBACI;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CATD;;KAAMD,Q;;AAWN,MAAME,YAAY,GAAG,QAAa;AAAA,MAAZ;AAACD,IAAAA;AAAD,GAAY;;AAC9B,MAAIA,KAAK,CAACE,WAAN,IAAqB,CAAC,CAA1B,EAA6B;AAAE;AAC3B,WAAQF,KAAK,CAACG,SAAP,gBACH;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,gCAAyCH,KAAK,CAACE,WAAN,GAAoB,CAA7D,eAAyEF,KAAK,CAACD,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA,kBAAyBC,KAAK,CAACI,aAAN,CAAoBJ,KAAK,CAACE,WAA1B,EAAuCG;AAAhE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADG,gBAKF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALL;AAMH,GAPD,MAOO;AAAE,wBAAO,qCAAP;AAAc;AAC1B,CATD;;MAAMJ,Y;;AAWN,MAAMK,UAAU,GAAG,SAAa;AAAA,MAAZ;AAACN,IAAAA;AAAD,GAAY;AAE5B,QAAMO,OAAO,GAAGP,KAAK,CAACQ,OAAN,CAAcC,MAAd,CAAsB,CAACC,CAAD,EAAKC,KAAL,KAAe;AACjD,WAASX,KAAK,CAACE,WAAN,GAAkB,CAAlB,IAAuBS,KAAxB,IAAmCA,KAAK,IAAIX,KAAK,CAACE,WAAN,GAAkB,CAAlB,GAAsB,CAA1E;AACH,GAFe,CAAhB;AAIA,QAAMU,aAAa,GAAGL,OAAO,CAACE,MAAR,CAAgB,CAACI,MAAD,EAASF,KAAT,KAAmB;AACrD,WAAQE,MAAM,CAACC,YAAP,CAAoB,UAApB,KAAmC,CAA3C;AACH,GAFqB,EAEnB,CAFmB,EAEhBC,UAFgB,CAEL,CAFK,EAEFV,WAFpB,CAN4B,CAQI;;AAEhCW,EAAAA,OAAO,CAACC,GAAR,CAAaL,aAAb;AAGA,SAAOL,OAAO,CAACW,GAAR,CAAa,CAACL,MAAD,EAASF,KAAT,KAAmB;AACnC,wBACI;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAE,YAAUX,KAAK,CAACE,WAF1B;AAGI,QAAA,EAAE,EAAE,YAAUS,KAHlB;AAII,QAAA,KAAK,EAAEE,MAAM,CAACE,UAAP,CAAkB,CAAlB,EAAqBV;AAJhC;AAAA;AAAA;AAAA;AAAA,cADJ,EAMKW,OAAO,CAACC,GAAR,CAAY,YAAUjB,KAAK,CAACE,WAA5B,CANL,eAOI;AACI,QAAA,OAAO,EAAE,YAAUS,KADvB;AAEI,QAAA,SAAS,EAAC,aAFd;AAAA,kBAGCE,MAAM,CAACE,UAAP,CAAkB,CAAlB,EAAqBV;AAHtB;AAAA;AAAA;AAAA;AAAA,cAPJ,eAWI;AACI,QAAA,SAAS,EAAC,UADd;AAEI,QAAA,EAAE,EAAE,cAAYM,KAFpB;AAGI,QAAA,KAAK,EAAE;AAACQ,UAAAA,OAAO,EAAC;AAAT,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA,oBADJ;AAmBH,GApBM,CAAP;AAqBH,CAlCD;;MAAMb,U;;AAoCN,MAAMc,OAAO,GAAG,SAAa;AAAA,MAAZ;AAACpB,IAAAA;AAAD,GAAY;;AACzB,MAAIA,KAAK,CAACE,WAAN,IAAqB,CAAC,CAA1B,EAA6B;AAAE;AAC3B,wBACI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAwB,MAAA,QAAQ,EAAImB,KAAD,IAAW;AAC1CrB,QAAAA,KAAK,CAACsB,SAAN,CAAgBD,KAAK,CAACE,MAAN,CAAaC,EAA7B;AACH,OAFD;AAAA,6BAGA,QAAC,UAAD;AAAY,QAAA,KAAK,EAAExB;AAAnB;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPD,MAOM,oBAAO,qCAAP;AACT,CATD;;MAAMoB,O;AAWN,eAAerB,QAAf","sourcesContent":["import React from \"react\"\n\nconst Question = (props) => {\n    return(\n        <section className=\"question cf\">\n            <p className=\"instruction\"></p>\n            <QuestionText props={props} />\n            <Choices props={props}/>\n            <p className=\"messages\"></p>\n        </section>\n    )\n}\n\nconst QuestionText = ({props}) => {\n    if( props.questionNum != -1 ){ //-1 is start menu\n        return (props.isFetched) ? (\n            <>\n                <p className=\"question-number\">Question {props.questionNum + 1} out of 5{props.Question}</p>\n                <p className=\"question\">{props.questionTexts[props.questionNum].textContent}</p> {/* THERE IS A PROBLEM AT THIS STAGE*/}\n            </>\n        ) : (<p>Still Loading..</p>)\n    } else { return <></> }\n}\n\nconst ChoiceList = ({props}) => {\n\n    const choices = props.answers.filter( (_ , index) => {\n        return ((props.questionNum*4 <= index) && (index <= props.questionNum*4 + 3))\n    })\n    \n    const correctAnswer = choices.filter( (choice, index) => {\n        return( choice.getAttribute(\"fraction\") == 1 )\n    })[0].childNodes[1].textContent //get text value of the correct Answer\n\n    console.log( correctAnswer )\n\n\n    return choices.map( (choice, index) => {\n        return(\n            <>\n                <input\n                    type=\"radio\"\n                    name={\"answer-\"+props.questionNum}\n                    id={\"answer-\"+index}\n                    value={choice.childNodes[1].textContent}/>\n                {console.log(\"answer-\"+props.questionNum)}\n                <label\n                    htmlFor={\"answer-\"+index}\n                    className=\"hovereffect\">\n                {choice.childNodes[1].textContent}</label>\n                <p\n                    className=\"feedback\"\n                    id={\"feedback-\"+index}\n                    style={{display:\"block\"}}>\n                Feedback\n                </p>\n            </>)\n    })\n}\n\nconst Choices = ({props}) => {\n    if( props.questionNum != -1 ){ //-1 is start menu\n        return(\n            <form className=\"mc cf\" onChange={ (event) => {\n                props.setAnswer(event.target.id)\n            }}>\n            <ChoiceList props={props}/>\n            </form>)\n    }else return <></> \n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}