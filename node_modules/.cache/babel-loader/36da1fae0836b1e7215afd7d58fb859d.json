{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js\";\nimport React from \"react\";\nimport Buttons from \"./Buttons\"; //contain question text\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuestionText = _ref => {\n  let {\n    props\n  } = _ref;\n\n  if (props.questionNum != -1) {\n    //-1 is start menu\n    return props.isFetched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-number\",\n        children: [\"Question \", props.questionNum + 1, \" out of 5\", props.Question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: props.questionTexts[props.questionNum].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Still Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n}; //display choices\n\n\n_c = QuestionText;\n\nconst ChoiceList = _ref2 => {\n  let {\n    props\n  } = _ref2;\n  console.log(props); //filter choice for this question\n\n  const ChoicesJSX = choices.map((choice, index) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"answer-\" + props.questionNum,\n        id: \"answer-\" + index,\n        value: choice.childNodes[1].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answer-\" + index,\n        className: \"hovereffect\",\n        children: choice.childNodes[1].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback\",\n        id: \"feedback-\" + index,\n        style: {\n          display: \"block\"\n        },\n        children: \"Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"mc cf\",\n    onChange: event => {\n      props.setSelectedAnswer(event.target.id);\n    },\n    children: ChoicesJSX\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ChoiceList;\n\nconst Choices = _ref3 => {\n  let {\n    props\n  } = _ref3;\n  console.log(props);\n\n  if (props.questionNum != -1) {\n    //-1 is start menu\n    return /*#__PURE__*/_jsxDEV(ChoiceList, {\n      props: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c3 = Choices;\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setCorrectAnswer = this.setCorrectAnswer.bind(this);\n    this.setSelectedAnswer = this.setSelectedAnswer.bind(this);\n    const choices = props.answers.filter((_, index) => {\n      return props.questionNum * 4 <= index && index <= props.questionNum * 4 + 3;\n    });\n    var correctAnswer;\n    choices.forEach((choice, index) => {\n      if (choice.getAttribute(\"fraction\") == 1) {\n        correctAnswer = \"answer-\" + index;\n      }\n    });\n    this.state = {\n      correctAnswer: correctAnswer,\n      choices: choices,\n      selectedAnswer: \"\",\n      coorect: false\n    };\n  } //setCorrectAnswer\n\n\n  setCorrectAnswer(answer) {\n    this.setState({\n      correctAnswer: answer\n    });\n  }\n\n  setSelectedAnswer(answer) {\n    console.log(answer);\n    this.setState({\n      selectedAnswer: answer\n    });\n  }\n\n  checkAnswer() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"question cf\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instruction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(QuestionText, {\n          props: this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Choices, {\n          props: { ...this.props,\n            setSelectedAnswer: this.setSelectedAnswer,\n            setCorrectAnswer: this.setCorrectAnswer,\n            choices: this.state.choices\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), console.log(this.props), /*#__PURE__*/_jsxDEV(Buttons, {\n        goToNextQuestion: this.props.goToNextQuestion,\n        goToPrevQuestion: this.props.goToPrevQuestion,\n        checkAnswer: this.checkAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst Debug = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c4 = Debug;\nexport default Question;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"QuestionText\");\n$RefreshReg$(_c2, \"ChoiceList\");\n$RefreshReg$(_c3, \"Choices\");\n$RefreshReg$(_c4, \"Debug\");","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js"],"names":["React","Buttons","QuestionText","props","questionNum","isFetched","Question","questionTexts","textContent","ChoiceList","console","log","ChoicesJSX","choices","map","choice","index","childNodes","display","event","setSelectedAnswer","target","id","Choices","Component","constructor","setCorrectAnswer","bind","answers","filter","_","correctAnswer","forEach","getAttribute","state","selectedAnswer","coorect","answer","setState","checkAnswer","render","goToNextQuestion","goToPrevQuestion","Debug"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Buttons from \"./Buttons\"\n\n//contain question text\nconst QuestionText = ({props}) => {\n    if( props.questionNum != -1 ){ //-1 is start menu\n        return (props.isFetched) ? (\n            <>\n                <p className=\"question-number\">Question {props.questionNum + 1} out of 5{props.Question}</p>\n                <p className=\"question\">{props.questionTexts[props.questionNum].textContent}</p> {/* THERE IS A PROBLEM AT THIS STAGE*/}\n            </>\n        ) : (<p>Still Loading..</p>)\n    } else { return <></> }\n}\n\n\n//display choices\nconst ChoiceList = ({props}) => {\n\n    console.log(props)\n    //filter choice for this question\n\n    const ChoicesJSX = choices.map( (choice, index) => {\n        return(\n            <>\n                <input\n                    type=\"radio\"\n                    name={\"answer-\"+props.questionNum}\n                    id={\"answer-\"+index}\n                    value={choice.childNodes[1].textContent}/>\n                <label\n                    htmlFor={\"answer-\"+index}\n                    className=\"hovereffect\">\n                {choice.childNodes[1].textContent}</label>\n                <p\n                    className=\"feedback\"\n                    id={\"feedback-\"+index}\n                    style={{display:\"block\"}}>\n                Feedback\n                </p>\n            </>)\n    })\n\n\n    return(\n        <form className=\"mc cf\" onChange={(event) => {\n            props.setSelectedAnswer(event.target.id)}\n            }>\n        {ChoicesJSX}\n        </form>\n    )\n}\n\nconst Choices = ({props}) => {\n    console.log(props)\n\n    if( props.questionNum != -1 ){ //-1 is start menu\n        return(\n            <ChoiceList props={props}/>\n            )\n    }else return <></> \n}\n\nclass Question extends React.Component{\n    constructor(props){\n        super(props)\n        this.setCorrectAnswer = this.setCorrectAnswer.bind(this)\n        this.setSelectedAnswer = this.setSelectedAnswer.bind(this)\n\n        const choices = props.answers.filter( (_ , index) => {\n            return ((props.questionNum*4 <= index) && (index <= props.questionNum*4 + 3))\n        })\n\n        var correctAnswer \n        choices.forEach( (choice,index) => {\n            if( choice.getAttribute(\"fraction\") == 1 ){\n                correctAnswer = \"answer-\"+index\n            }  \n        })\n\n        this.state = {\n            correctAnswer:correctAnswer,\n            choices: choices,\n            selectedAnswer:\"\",\n            coorect: false\n        }\n    }\n\n    //setCorrectAnswer\n    setCorrectAnswer(answer){\n        this.setState({\n            correctAnswer: answer\n        })\n    }\n\n    setSelectedAnswer(answer){\n        console.log(answer)\n        this.setState({\n            selectedAnswer: answer\n        })\n    }\n\n    checkAnswer(){\n\n    }\n\n    render(){\n        return(\n        <>\n        <section className=\"question cf\">\n            <p className=\"instruction\"></p>\n            <QuestionText props={this.props} />\n            <Choices\n                props={{...this.props,\n                    setSelectedAnswer: this.setSelectedAnswer,\n                    setCorrectAnswer: this.setCorrectAnswer,\n                    choices: this.state.choices\n                }}\n            />\n            <p className=\"messages\"></p>\n        </section>\n\n        {console.log(this.props)}\n        <Buttons\n          goToNextQuestion={this.props.goToNextQuestion}\n          goToPrevQuestion={this.props.goToPrevQuestion}\n          checkAnswer={this.checkAnswer}/>\n\n        </>\n        )\n    }\n}\n\nconst Debug = (props) =>{\n    console.log(props)\n    return(<></>)\n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}