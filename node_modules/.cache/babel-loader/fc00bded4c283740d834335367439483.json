{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js\";\nimport React from \"react\";\nimport Buttons from \"./Buttons\"; //contain question text\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuestionText = _ref => {\n  let {\n    props\n  } = _ref;\n\n  if (props.questionNum != -1) {\n    //-1 is start menu\n    return props.isFetched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-number\",\n        children: [\"Question \", props.questionNum + 1, \" out of 5\", props.Question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: props.questionTexts[props.questionNum].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Still Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n}; //display choices\n\n\n_c = QuestionText;\n\nconst ChoiceList = _ref2 => {\n  let {\n    props\n  } = _ref2;\n  console.log(props); //filter choice for this question\n\n  const choices = props.answers.filter((_, index) => {\n    return props.questionNum * 4 <= index && index <= props.questionNum * 4 + 3;\n  });\n  var correctAnswer = \"\"; //setCorrectAnswer\n\n  choices.forEach((choice, index) => {\n    if (choice.getAttribute(\"fraction\") == 1) {\n      setCorrectAnswer(\"answer-\" + index);\n    }\n  });\n  var selectedAnswer = \"\";\n  const ChoicesJSX = choices.map((choice, index) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"answer-\" + props.questionNum,\n        id: \"answer-\" + index,\n        value: choice.childNodes[1].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answer-\" + index,\n        className: \"hovereffect\",\n        children: choice.childNodes[1].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback\",\n        id: \"feedback-\" + index,\n        style: {\n          display: \"block\"\n        },\n        children: \"Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"mc cf\",\n    onChange: event => {\n      //setSelectedAnswer\n      //setSelectedAnswer(event.target.id)\n      console.log(correctAnswer);\n      console.log(selectedAnswer);\n    },\n    children: ChoicesJSX\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ChoiceList;\n\nconst Choices = _ref3 => {\n  let {\n    props\n  } = _ref3;\n  console.log(props);\n\n  if (props.questionNum != -1) {\n    //-1 is start menu\n    return /*#__PURE__*/_jsxDEV(ChoiceList, {\n      props: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c3 = Choices;\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      correctAnswer: \"\",\n      selectedAnswer: \"\",\n      coorect: false\n    };\n    this.setCorrectAnswer = this.setCorrectAnswer.bind(this);\n    this.setSelectedAnswer = this.setSelectedAnswer.bind(this);\n  }\n\n  setCorrectAnswer(answer) {\n    this.setState({\n      correctAnswer: answer\n    });\n  }\n\n  setSelectedAnswer(answer) {\n    this.setState({\n      selectedAnswer: answer\n    });\n  }\n\n  checkAnswer() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"question cf\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instruction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(QuestionText, {\n          props: this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Choices, {\n          props: { ...this.props,\n            setSelectedAnswer: this.setSelectedAnswer,\n            setCorrectAnswer: this.setCorrectAnswer\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), console.log(this.props), /*#__PURE__*/_jsxDEV(Buttons, {\n        goToNextQuestion: this.props.goToNextQuestion,\n        goToPrevQuestion: this.props.goToPrevQuestion,\n        checkAnswer: this.checkAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst Debug = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c4 = Debug;\nexport default Question;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"QuestionText\");\n$RefreshReg$(_c2, \"ChoiceList\");\n$RefreshReg$(_c3, \"Choices\");\n$RefreshReg$(_c4, \"Debug\");","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js"],"names":["React","Buttons","QuestionText","props","questionNum","isFetched","Question","questionTexts","textContent","ChoiceList","console","log","choices","answers","filter","_","index","correctAnswer","forEach","choice","getAttribute","setCorrectAnswer","selectedAnswer","ChoicesJSX","map","childNodes","display","event","Choices","Component","constructor","state","coorect","bind","setSelectedAnswer","answer","setState","checkAnswer","render","goToNextQuestion","goToPrevQuestion","Debug"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Buttons from \"./Buttons\"\n\n//contain question text\nconst QuestionText = ({props}) => {\n    if( props.questionNum != -1 ){ //-1 is start menu\n        return (props.isFetched) ? (\n            <>\n                <p className=\"question-number\">Question {props.questionNum + 1} out of 5{props.Question}</p>\n                <p className=\"question\">{props.questionTexts[props.questionNum].textContent}</p> {/* THERE IS A PROBLEM AT THIS STAGE*/}\n            </>\n        ) : (<p>Still Loading..</p>)\n    } else { return <></> }\n}\n\n\n//display choices\nconst ChoiceList = ({props}) => {\n\n    console.log(props)\n    //filter choice for this question\n    const choices = props.answers.filter( (_ , index) => {\n        return ((props.questionNum*4 <= index) && (index <= props.questionNum*4 + 3))\n    })\n\n    var correctAnswer = \"\"\n    //setCorrectAnswer\n    choices.forEach( (choice,index) => {\n      if( choice.getAttribute(\"fraction\") == 1 ){\n          setCorrectAnswer(\"answer-\"+index)\n      }  \n    })\n\n    var selectedAnswer = \"\"\n\n    const ChoicesJSX = choices.map( (choice, index) => {\n        return(\n            <>\n                <input\n                    type=\"radio\"\n                    name={\"answer-\"+props.questionNum}\n                    id={\"answer-\"+index}\n                    value={choice.childNodes[1].textContent}/>\n                <label\n                    htmlFor={\"answer-\"+index}\n                    className=\"hovereffect\">\n                {choice.childNodes[1].textContent}</label>\n                <p\n                    className=\"feedback\"\n                    id={\"feedback-\"+index}\n                    style={{display:\"block\"}}>\n                Feedback\n                </p>\n            </>)\n    })\n\n    return(\n        <form className=\"mc cf\" onChange={ (event) => {\n            //setSelectedAnswer\n            //setSelectedAnswer(event.target.id)\n            console.log( correctAnswer )\n            console.log( selectedAnswer )\n        }}>\n        {ChoicesJSX}\n        </form>\n    )\n}\n\nconst Choices = ({props}) => {\n    console.log(props)\n\n    if( props.questionNum != -1 ){ //-1 is start menu\n        return(\n            <ChoiceList props={props}/>\n            )\n    }else return <></> \n}\n\nclass Question extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            correctAnswer:\"\",\n            selectedAnswer:\"\",\n            coorect: false\n        }\n        this.setCorrectAnswer = this.setCorrectAnswer.bind(this)\n        this.setSelectedAnswer = this.setSelectedAnswer.bind(this)\n    }\n\n    setCorrectAnswer(answer){\n        this.setState({\n            correctAnswer: answer\n        })\n    }\n\n    setSelectedAnswer(answer){\n        this.setState({\n            selectedAnswer: answer\n        })\n    }\n\n    checkAnswer(){\n\n    }\n\n    render(){\n        return(\n        <>\n        <section className=\"question cf\">\n            <p className=\"instruction\"></p>\n            <QuestionText props={this.props} />\n            <Choices\n                props={{...this.props,\n                    setSelectedAnswer: this.setSelectedAnswer,\n                    setCorrectAnswer: this.setCorrectAnswer}}\n            />\n            <p className=\"messages\"></p>\n        </section>\n\n        {console.log(this.props)}\n        <Buttons\n          goToNextQuestion={this.props.goToNextQuestion}\n          goToPrevQuestion={this.props.goToPrevQuestion}\n          checkAnswer={this.checkAnswer}/>\n\n        </>\n        )\n    }\n}\n\nconst Debug = (props) =>{\n    console.log(props)\n    return(<></>)\n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}