{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/App.js\";\nimport logo from './logo.svg';\nimport Header from './Header';\nimport Wrapper from './Wrapper';\nimport Question from './Question';\nimport Footer from './Footer';\nimport React from 'react';\nimport './App.css';\nimport XMLData from './xml/mc.xml'; //import './arrangeprotein.css'\n//import './bootstrap.min.css'\n//import './jquery.mobile-1.4.0.css'\n//import './mcstyle.css'\n//import './quiz.css'\n//import './reset.css'\n//import './css/style.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      questionNum: 0,\n      answers: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(XMLData, {\n      \"Content-Type\": \"application/xml; charset=utf-8\"\n    }).then(response => {\n      //there is no need to parse this everytime there is a mount,\n      //only need to parse it when the page is loaded\n      const parser = new DOMParser();\n      var xml = parser.parseFromString(response.data, \"text/xml\");\n      var question = xml.getElementsByTagName(\"questiontext\")[questionNum];\n      var answers = xml.getElementsByTagName(\"answer\"); //.innerHTML <= should I use innerHTML??\n      //should I change parse xml as a string or as an JSX object?\n      //var answers = xml.getElementsByTagName(\"\")\n      //do we have to set every state again??\n\n      this.setState({\n        questionNum: this.state.questionNum,\n        answers: answers\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Question, {\n        questionNum: this.state.questionNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/App.js"],"names":["logo","Header","Wrapper","Question","Footer","React","XMLData","App","Component","state","questionNum","answers","componentDidMount","axios","get","then","response","parser","DOMParser","xml","parseFromString","data","question","getElementsByTagName","setState","render"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,cAApB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,WAAW,EAAE,CADP;AAENC,MAAAA,OAAO,EAAC;AAFF,KAFwB;AAAA;;AAOhCC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAACC,GAAN,CAAUR,OAAV,EACI;AAAC,sBAAe;AAAhB,KADJ,EAEGS,IAFH,CAESC,QAAD,IAAY;AAChB;AACA;AACA,YAAMC,MAAM,GAAG,IAAIC,SAAJ,EAAf;AACA,UAAIC,GAAG,GAAGF,MAAM,CAACG,eAAP,CAAuBJ,QAAQ,CAACK,IAAhC,EAAqC,UAArC,CAAV;AACA,UAAIC,QAAQ,GAAGH,GAAG,CAACI,oBAAJ,CAAyB,cAAzB,EAAyCb,WAAzC,CAAf;AACA,UAAIC,OAAO,GAAGQ,GAAG,CAACI,oBAAJ,CAAyB,QAAzB,CAAd,CANgB,CAQhB;AACA;AACA;AAEA;;AACA,WAAKC,QAAL,CAAc;AACVd,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WADd;AAEVC,QAAAA,OAAO,EAAEA;AAFC,OAAd;AAIH,KAnBD;AAoBH;;AAECc,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAvC+B;;AA0ClC,eAAeH,GAAf","sourcesContent":["import logo from './logo.svg'\n\nimport Header from './Header'\nimport Wrapper from './Wrapper'\nimport Question from './Question';\nimport Footer from './Footer';\n\nimport React from 'react';\n\nimport './App.css';\nimport XMLData from './xml/mc.xml'\n//import './arrangeprotein.css'\n//import './bootstrap.min.css'\n//import './jquery.mobile-1.4.0.css'\n//import './mcstyle.css'\n//import './quiz.css'\n//import './reset.css'\n//import './css/style.css'\n\nclass App extends React.Component {\n\n  state = {\n    questionNum: 0,\n    answers:[]\n}\n\n  componentDidMount(){\n    axios.get(XMLData,\n        {\"Content-Type\":\"application/xml; charset=utf-8\"\n    }).then((response)=>{\n        //there is no need to parse this everytime there is a mount,\n        //only need to parse it when the page is loaded\n        const parser = new DOMParser()\n        var xml = parser.parseFromString(response.data,\"text/xml\")\n        var question = xml.getElementsByTagName(\"questiontext\")[questionNum]\n        var answers = xml.getElementsByTagName(\"answer\")\n        \n        //.innerHTML <= should I use innerHTML??\n        //should I change parse xml as a string or as an JSX object?\n        //var answers = xml.getElementsByTagName(\"\")\n\n        //do we have to set every state again??\n        this.setState({\n            questionNum: this.state.questionNum,\n            answers: answers\n        })\n    })\n}\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Wrapper/>\n        <Question questionNum={this.state.questionNum}/>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}