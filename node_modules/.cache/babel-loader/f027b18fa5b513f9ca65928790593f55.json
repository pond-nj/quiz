{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js\";\nimport React from \"react\";\nimport axios from 'axios'; //path must be changed accordingly to the param query input\n\nimport XMLData from './xml/mc.xml';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Question extends React.Component {\n  //questionNum = this.props.questionNum\n  constructor(props) {\n    super(props);\n    const {\n      questionNum\n    } = this.props.questionNum; //<= why does this raise an error????\n\n    this.state = {\n      questionText: \"\",\n      questionNum: questionNum\n    };\n  }\n\n  componentDidMount() {\n    axios.get(XMLData, {\n      \"Content-Type\": \"application/xml; charset=utf-8\"\n    }).then(response => {\n      //there is no need to parse this everytime there is a mount,\n      //only need to parse it when the page is loaded\n      const parser = new DOMParser();\n      var xml = parser.parseFromString(response.data, \"text/xml\");\n      var questionText = xml.getElementsByTagName(\"questiontext\")[this.state.questionNum].childNodes[0];\n      console.log(questionText); //console.log(question[this.questionNum].innerHTML) <= should I use innerHTML??\n\n      this.setState({\n        questionText: questionText\n      });\n      console.log(\"state\");\n      console.log(this.state.questionText + \"_\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"question cf\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instruction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-number\",\n        children: this.state.questionNum + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: this.state.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mc cf\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"\",\n          id: \"answer-0\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"answer-0\",\n          className: \"hovereffect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback\",\n          id: \"feedback-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"\",\n          id: \"answer-1\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"answer-1\",\n          className: \"hovereffect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback\",\n          id: \"feedback-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"\",\n          id: \"answer-2\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"answer-2\",\n          className: \"hovereffect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback\",\n          id: \"feedback-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"\",\n          id: \"answer-3\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"answer-3\",\n          className: \"hovereffect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback\",\n          id: \"feedback-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js"],"names":["React","axios","XMLData","Question","Component","constructor","props","questionNum","state","questionText","componentDidMount","get","then","response","parser","DOMParser","xml","parseFromString","data","getElementsByTagName","childNodes","console","log","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,cAApB;;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAsC;AAElC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,UAAM;AAACC,MAAAA;AAAD,QAAgB,KAAKD,KAAL,CAAWC,WAAjC,CAFc,CAE+B;;AAC7C,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETF,MAAAA,WAAW,EAAEA;AAFJ,KAAb;AAIH;;AAGDG,EAAAA,iBAAiB,GAAE;AACfT,IAAAA,KAAK,CAACU,GAAN,CAAUT,OAAV,EACI;AAAC,sBAAe;AAAhB,KADJ,EAEGU,IAFH,CAESC,QAAD,IAAY;AAChB;AACA;AACA,YAAMC,MAAM,GAAG,IAAIC,SAAJ,EAAf;AACA,UAAIC,GAAG,GAAGF,MAAM,CAACG,eAAP,CAAuBJ,QAAQ,CAACK,IAAhC,EAAqC,UAArC,CAAV;AACA,UAAIT,YAAY,GAAGO,GAAG,CAACG,oBAAJ,CAAyB,cAAzB,EAAyC,KAAKX,KAAL,CAAWD,WAApD,EAAiEa,UAAjE,CAA4E,CAA5E,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYb,YAAZ,EANgB,CAOhB;;AACA,WAAKc,QAAL,CAAc;AACVd,QAAAA,YAAY,EAAEA;AADJ,OAAd;AAGAY,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,YAAX,GAA0B,GAAtC;AACH,KAfD;AAgBH;;AAEDe,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,kBAAgC,KAAKhB,KAAL,CAAWD,WAAX,GAAuB;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA,kBAAyB,KAAKC,KAAL,CAAWC;AAApC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,EAFT;AAEY,UAAA,EAAE,EAAC,UAFf;AAGI,UAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AACI,UAAA,OAAO,EAAC,UADZ;AAEI,UAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI;AACI,UAAA,SAAS,EAAC,UADd;AAEI,UAAA,EAAE,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,gBATJ,eAaI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,EAFT;AAGI,UAAA,EAAE,EAAC,UAHP;AAII,UAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAkBI;AACI,UAAA,OAAO,EAAC,UADZ;AAEI,UAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAsBI;AACI,UAAA,SAAS,EAAC,UADd;AAEI,UAAA,EAAE,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eA0BI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,EAFT;AAGI,UAAA,EAAE,EAAC,UAHP;AAII,UAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,gBA1BJ,eA+BI;AACI,UAAA,OAAO,EAAC,UADZ;AAEI,UAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,gBA/BJ,eAmCI;AACI,UAAA,SAAS,EAAC,UADd;AAEI,UAAA,EAAE,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,gBAnCJ,eAuCI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,EAFT;AAGI,UAAA,EAAE,EAAC,UAHP;AAII,UAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,gBAvCJ,eA4CI;AACI,UAAA,OAAO,EAAC,UADZ;AAEI,UAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,gBA5CJ,eAgDI;AACI,UAAA,SAAS,EAAC,UADd;AAEI,UAAA,EAAE,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,gBAhDJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAyDI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAzDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA6DH;;AA9FiC;;AAiGtC,eAAeN,QAAf","sourcesContent":["import React from \"react\"\nimport axios from 'axios'\n\n//path must be changed accordingly to the param query input\nimport XMLData from './xml/mc.xml'\n\nclass Question extends React.Component{\n\n    //questionNum = this.props.questionNum\n    constructor(props){\n        super(props)\n        const {questionNum} = this.props.questionNum //<= why does this raise an error????\n        this.state = {\n            questionText: \"\",\n            questionNum: questionNum\n        }\n    }\n\n\n    componentDidMount(){\n        axios.get(XMLData,\n            {\"Content-Type\":\"application/xml; charset=utf-8\"\n        }).then((response)=>{\n            //there is no need to parse this everytime there is a mount,\n            //only need to parse it when the page is loaded\n            const parser = new DOMParser()\n            var xml = parser.parseFromString(response.data,\"text/xml\")\n            var questionText = xml.getElementsByTagName(\"questiontext\")[this.state.questionNum].childNodes[0]\n            console.log(questionText)\n            //console.log(question[this.questionNum].innerHTML) <= should I use innerHTML??\n            this.setState({\n                questionText: questionText\n            })\n            console.log(\"state\")\n            console.log(this.state.questionText + \"_\")\n        })\n    }\n\n    render(){\n        return(\n            <section className=\"question cf\">\n                <p className=\"instruction\"></p>\n                <p className=\"question-number\">{this.state.questionNum+1}</p>\n                <p className=\"question\">{this.state.questionText}</p>\t\n                <form className=\"mc cf\">\n                    <input\n                        type=\"radio\"\n                        name=\"\" id=\"answer-0\"\n                        value=\"\"/>\n                    <label\n                        htmlFor=\"answer-0\"\n                        className=\"hovereffect\">\n                    </label>\n                    <p\n                        className=\"feedback\"\n                        id=\"feedback-0\">\n                    </p>\n                    <input\n                        type=\"radio\"\n                        name=\"\"\n                        id=\"answer-1\"\n                        value=\"\"/>\n                    <label\n                        htmlFor=\"answer-1\"\n                        className=\"hovereffect\">\n                    </label>\n                    <p\n                        className=\"feedback\"\n                        id=\"feedback-1\">\n                    </p>\n                    <input\n                        type=\"radio\"\n                        name=\"\"\n                        id=\"answer-2\"\n                        value=\"\"/>\n                    <label\n                        htmlFor=\"answer-2\"\n                        className=\"hovereffect\">\n                    </label>\n                    <p\n                        className=\"feedback\"\n                        id=\"feedback-2\">\n                    </p>\n                    <input\n                        type=\"radio\"\n                        name=\"\"\n                        id=\"answer-3\"\n                        value=\"\"/>\n                    <label\n                        htmlFor=\"answer-3\"\n                        className=\"hovereffect\">\n                    </label>\n                    <p\n                        className=\"feedback\"\n                        id=\"feedback-3\">\n                    </p>\n                </form>\n                <p className=\"messages\"></p>\n            </section>\n        )\n    }\n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}