[{"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/index.js":"1","/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/reportWebVitals.js":"2","/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/App.js":"3","/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Header.js":"4","/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Instruction.js":"5","/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js":"6","/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Footer.js":"7","/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Buttons.js":"8","/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/PageManager.js":"9","/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/index.js":"10","/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/App.js":"11","/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/reportWebVitals.js":"12","/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/PageManager.js":"13","/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/Header.js":"14","/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/Instruction.js":"15","/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/Question.js":"16","/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/Buttons.js":"17"},{"size":502,"mtime":1646362132266,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1643356939783,"results":"20","hashOfConfig":"19"},{"size":4559,"mtime":1646389143847,"results":"21","hashOfConfig":"19"},{"size":337,"mtime":1643358822763,"results":"22","hashOfConfig":"19"},{"size":1362,"mtime":1646378329701,"results":"23","hashOfConfig":"19"},{"size":4313,"mtime":1646389109412,"results":"24","hashOfConfig":"19"},{"size":0,"mtime":1644767046315,"results":"25","hashOfConfig":"26"},{"size":5550,"mtime":1646389209218,"results":"27","hashOfConfig":"19"},{"size":231,"mtime":1646384221301,"results":"28","hashOfConfig":"19"},{"size":502,"mtime":1646362132266,"results":"29","hashOfConfig":"30"},{"size":4559,"mtime":1646389143847,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1643356939783,"results":"32","hashOfConfig":"30"},{"size":231,"mtime":1646384221301,"results":"33","hashOfConfig":"30"},{"size":337,"mtime":1643358822763,"results":"34","hashOfConfig":"30"},{"size":1362,"mtime":1646378329701,"results":"35","hashOfConfig":"30"},{"size":4313,"mtime":1646389109412,"results":"36","hashOfConfig":"30"},{"size":5550,"mtime":1646389209218,"results":"37","hashOfConfig":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"a8yql0",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"xbtzgf",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2n2yxj",{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/index.js",[],["78","79"],"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/reportWebVitals.js",[],"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/App.js",["80","81"],"import Header from './Header'\nimport React from 'react'\nimport axios from 'axios'\n\nimport XMLData from './xml/mc.xml'\nimport './mcstyle.css'\nimport PageManager from './PageManager'\n\n/*\nNeed Updates:\n  Cannot click choice yet if reply button has not been pressed\n\n  Have to implement Last page after complete all questions\n  //review correct answer => display all correct answer\n\n  Additional features\n    1. Transition from feedback block:none to block:display\n    2. hide feedback (correct/ uncorrect) in chrome dev tools\n    3. (For self entertainment) Save individual's score to database\n*/\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      questionsList: [],\n      questionNum: -1, //0 to total no. of question-1, 0 is the first question\n      answersList: [],\n      selectedAnswer: -1,\n      correct: null,\n      pressSubmit: 0, // = 1 when submit button is press, use to show message when press submit but no answer is selected\n      startReview: -1 // = 1 when all questions are answered\n    }\n  }\n\n  setSubmit = (state) => { this.setState({\n      pressSubmit: state\n    })}\n\n  setStartReview = (state) => { this.setState({\n    startReview: state\n    })}\n\n  resetSelected = () => { this.setState({\n      correct: null,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })}\n\n  goToQuestion = (num) => {this.setState({\n    questionNum: num\n  })}\n\n  goToNextQuestion = () => { this.setState({\n      questionNum : this.state.questionNum + 1,\n      correct: null,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })}\n\n  goToPrevQuestion = () => { this.setState({\n      questionNum : this.state.questionNum - 1, \n      correct: null,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })}\n\n\n  setCorrect = (state) => { this.setState({\n      correct: state\n    })}\n\n  setSelectedAnswer = (answer) => { this.setState({\n      selectedAnswer: answer,\n      pressSubmit: 0\n    })}\n\n  componentDidMount(){\n    this.fetchQuestionsWithAxios()\n  }\n\n  fetchQuestionsWithAxios(){\n    axios.get(XMLData,\n      {\"Content-Type\":\"application/xml; charset=utf-8\"\n    }).then((response)=>{\n      console.log(response.data)\n      const parser = new DOMParser()\n      var xml = parser.parseFromString(response.data,\"text/xml\")\n    \n      var questionsList = Array.from(xml.getElementsByTagName(\"question\"))\n      console.log(questionsList[3].getElementsByTagName(\"questiontext\")[0].childNodes[0].textContent)\n\n      //shuffle elements in an array\n      const shuffle = (array) => {\n        var currentIndex = array.length,  randomIndex;\n        // While there remain elements to shuffle...\n        while (currentIndex != 0) {\n          // Pick a remaining element...\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex--;\n          // And swap it with the current element.\n          [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n        }\n        return array;\n      }\n\n      var answersList = []\n      for( var i = 0 ; i < questionsList.length ; i++ ){\n        var answers = Array.from( questionsList[i].getElementsByTagName(\"answer\") )\n        if( questionsList[i].getAttribute(\"randomanswer\").localeCompare(\"true\") == 0 ){\n          shuffle( answers )\n        }\n        // console.log( answers )\n        answersList.push( answers )\n      }\n\n      this.setState({\n          questionsList: questionsList,\n          answersList: answersList,\n      })\n    }).catch( e => {\n      console.log(e)\n    })\n  }\n\n  render(){\n\n    return (\n      <div className=\"App\">\n        <Header/>\n        <div id =\"wrapper\" data-role=\"content\">\n          <PageManager\n            questionNum={this.state.questionNum}\n            questionsList={this.state.questionsList}\n            choices = {this.state.answersList[this.state.questionNum]}\n            totalQuestions={this.state.answersList.length}\n            selectedAnswer={this.state.selectedAnswer}\n            correct={this.state.correct}\n            pressSubmit={this.state.pressSubmit}\n            startReview={this.state.startReview}\n\n            goToNextQuestion={this.goToNextQuestion}\n            goToPrevQuestion={this.goToPrevQuestion}\n            goToQuestion={this.goToQuestion}\n            setSelectedAnswer={this.setSelectedAnswer}\n            setCorrect={this.setCorrect}\n            setSubmit={this.setSubmit}\n            resetSelected={this.resetSelected}\n            setStartReview={this.setStartReview}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Header.js",[],"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Instruction.js",["82"],"import React from \"react\"\n\nconst Instruction = ({props}) => {\n\n\tif( props.questionNum == -1 ){\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<section className=\"instruciton cf\">\n\t\t\t\t\t<p className=\"instruction\">Please read the following instructions carefully before you start:</p>\n\t\t\t\t\t<h3>Instructions</h3>\t\t\t\n\t\t\t\t\t<ol className=\"instruction\">\n\t\t\t\t\t\t<li>Please do not click \"go back\" in your browser.</li>\n\t\t\t\t\t\t<li>Please do not close this page until you have completed the exercise.</li>\n\t\t\t\t\n\t\t\t\t\t\t<li>You cannot modify your answer after clicking \"submit\" button.</li>\t\t\t\t\n\t\t\t\t\t\t<li>The author may have helpful comments for each question. Be sure to check for this feedback.</li>\n\t\t\t\t\t</ol>\n\t\t\t\t\t<p className=\"instruction\">Good luck!</p>\n\t\t\t\t\t{/*<p className=\"status\">Loading your exercises...</p>*/ }\n\t\t\t\t\t<p className=\"status\">Please press \"start\" to begin.</p>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tquestionNum={props.questionNum}\n\t\t\t\t\t\tonClick={props.goToNextQuestion}/>\n\t\t\t\t</section>\n\t\t\t</>\n\t\t\t)\n\t} else {\n\t\treturn <></>\n\t}\n}\n\nconst Button = (props) => {\n\treturn (<button\n                name=\"control\"\n                className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-corner-all ui-mini\"\n\t\t\t\tstyle={{display: \"inline-block\"}}\n                id=\"controlBtn-start\"\n                value=\"start\"\n\t\t\t\tonClick={props.onClick}>\n\t\t\t\t\tStart</button>\n\t)\n}\n\nexport default Instruction\n","/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Question.js",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98"],"import React, { useState } from \"react\"\nimport Buttons from \"./Buttons\"\n\n//contain question text\nconst QuestionText = ({props}) => {\n    const showQuestionText = () => {\n        const text = props.questionsList[props.questionNum].getElementsByTagName(\"questiontext\")[0].childNodes[0].textContent\n        var br = \"<br/ >\";\n        // console.log(text.split(regex))\n        const textArr = text.split(br)\n        return textArr.map((line, index) => {\n            if( index != textArr.length-1 ) return  (<> {line} <br key={\"key_\" + index} /> </>)\n            else return (<>{line}</>)\n        })\n\n    }\n\n    const showImage = () => {\n        const imgArr = props.questionsList[props.questionNum].getElementsByTagName(\"questiontext\")[0].getElementsByTagName(\"image\")\n        if( imgArr.length == 1 ) return <img src={imgArr[0].textContent}/>\n        else return <></>\n    }\n\n    if( props.questionNum != -1 ){ //-1 is start menu\n        return (<>\n            <p className=\"question-number\">Question {props.questionNum + 1} out of {props.totalQuestions}</p>\n            {/* {console.log(props.questionsList[props.questionNum].childNodes[1])} */}\n            <p className=\"question\">{showQuestionText()}</p>\n            {showImage()}\n        </>)\n\n    } else { return <></> }\n}\n\n//display choices\nconst ChoiceList = ({props}) => {\n    // console.log( props.choices )\n\n    const ChoicesJSX = props.choices.map( (choice, index) => {\n        // console.log(props.selectedAnswer)\n        console.log(props.correctAnswer)\n        return(\n            <>\n                <div className=\"ui-radio\">\n                <label\n                    htmlFor={\"answer-\"+index}\n                    className={\n                        \"hovereffect ui-btn ui-corner-all ui-btn-inherit ui-btn-icon-left \"+\n                        ((props.startReview == 1)? ((index==props.correctAnswer)? \"ui-radio-on\":\"ui-radio-off\") : ((index==props.selectedAnswer)? \"ui-radio-on\":\"ui-radio-off\"))\n                    }\n                        >\n                {choice.childNodes[1].textContent}\n                </label>\n                <input\n                    type=\"radio\"\n                    name={\"answer-\"+props.questionNum}\n                    index={index}\n                    id={\"answer-\"+index}\n                    value={choice.childNodes[1].textContent}/>\n                </div>\n                <p\n                    className=\"feedback\"\n                    id={\"feedback-\"+index}\n                    style={{display: ( (props.selectedAnswer == index) && (props.correct != null )) ? \"block\" : \"none\"}}>\n                {choice.childNodes[3].textContent}\n                </p>\n            </>)\n    })\n\n    return(\n        <form className=\"mc cf\" \n            onClick={(event) => {\n                props.setCorrect(null)\n                props.setSelectedAnswer(event.target.getAttribute(\"index\"))}\n            }\n            >\n        {ChoicesJSX}\n        </form>\n    )\n}\n\nconst Messages = ({props}) => {\n    // console.log(props.selectedAnswer)\n    const Message = (props.pressSubmit == 1 && props.selectedAnswer == -1)? \"Please answer the above question.\" : \"\"\n\n    return (<p className=\"messages\">{Message}</p>)\n}\n\nconst Question = ({props}) => {\n    console.log(props.questionNum)\n    if( props.questionNum != - 1 && props.questionNum != props.questionsList.length ){\n        return(<>\n            <section className=\"question cf\">\n                <QuestionText props={props} />\n                <ChoiceList props={{...props,\n                correctAnswer:props.choices.map( ( choice, _ ) => { return( choice.getAttribute(\"fraction\") == 1 )}).indexOf(true) }}/>\n                <Messages props = {props}/>\n            </section>\n\n            <Buttons props={{...props,\n                correctAnswer:props.choices.map( ( choice, _ ) => { return( choice.getAttribute(\"fraction\") == 1 )}).indexOf(true) }} />\n        </>)\n    }else if( props.questionNum == props.questionsList.length ){\n        return(<>\n            <section className=\"question cf\">\n                <p className=\"instruction\">This is the end of the exercise. Thank you!\n                <br/> <br/> Close the window to go back to the course.</p>\n            </section>\n            <Buttons props={props} />\n        </>)\n    }else { return(<></>)}\n}\n\nexport default Question","/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Footer.js",[],["99","100"],"/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/Buttons.js",["101","102","103","104","105","106","107","108"],"\nconst Previous = ({props}) => {\n    return(<button\n            name=\"control\"\n            className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-mini ui-corner-all\"\n            id=\"controlBtn-prev\"\n            value=\"prev\"\n            onClick={props.goToPrevQuestion}>\n            Previous\n        </button>\n    )}\n\nconst Next = ({props}) => {\n    return(<button\n            name=\"control\"\n            className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-corner-all ui-mini\"\n            id=\"controlBtn-next\"\n            value=\"next\"\n            onClick={ () => {\n                if(props.correct){ props.goToNextQuestion()\n                }else { console.log(\"wrong answer!\") }\n            }}>\n            Next\n        </button>\n    )}\n\nconst Submit = ({props}) => {\n    return(<button\n            name=\"control\"\n            className=\"controlBtn cf ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-corner-all ui-mini\"\n            id=\"controlBtn-submit\"\n            value=\"submit\"\n            onClick={() => {\n                props.setSubmit(1)\n                console.log(\"he\")\n                console.log(props.correctAnswer)\n                if( props.selectedAnswer == props.correctAnswer ){ props.setCorrect(true) }\n                else { props.setCorrect(false) }}\n            }>\n            Submit\n        </button>\n    )}\n\nconst Retry = ({props}) => {\n    return(<button name=\"control\"\n            className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-corner-all ui-mini\"\n            id=\"controlBtn-retry\"\n            value=\"retry\"\n            onClick={props.resetSelected}\n            >\n            Retry\n        </button>\n    )}\n\n//For Debugging\nconst Log = ({props}) => {\n    return(<button name=\"control\"\n            className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-corner-all ui-mini\"\n            onClick={()=>{\n                console.log( props)\n                console.log( props.selectedAnswer )\n                console.log( props.questionsList )\n            }}\n            >Log</button>\n        )}\n\nconst ReviewCorrectAnswer = ({props}) => {\n    return(<button name=\"control\"\n            className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-corner-all ui-mini\"\n            onClick={()=>{\n                props.setStartReview(1)\n                props.goToQuestion(0)\n            }}\n            >Review Correct Answer</button>\n        )}\n\nconst NextReview = ({props}) => {\n    return(<button name=\"control\"\n    className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-corner-all ui-mini\"\n    onClick={()=>{\n        props.goToQuestion(props.questionNum+1)\n    }}\n    >{\"Next>>\"}</button>\n    )}\n\n\n\n\nconst Buttons = ({props}) => {\n    //console.log( props )\n\n    const showButton = () => {\n        if( props.questionNum < props.questionsList.length && props.startReview == -1 ){\n            if(props.correct){ return <Next props={props} />\n            } else if( props.correct == false && props.selectedAnswer != - 1){ return <Retry props={props}/>\n            } else { return <Submit props={props}/> }\n        } else if (props.questionNum == props.questionsList.length ){\n            return <ReviewCorrectAnswer props={props}/>\n        } else if (props.startReview == 1){\n            return <NextReview props={props}/>\n        }\n    }\n    \n    return(\n        <div\n            id=\"footer\"\n            data-role=\"footer\"\n            className=\"cf ui-footer ui-bar-inherit\"\n            role=\"contentinfo\">\n\n\t\t\t{showButton()}\n            \n            {/*\n            For Debugging\n            <Log props={props}/>*\n            <Previous props={props}/>\n            */}\n\n            {/*\n            <button\n                name=\"control\"\n                className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-mini ui-corner-all ui-btn-icon-right\"\n                id=\"controlBtn-review\"\n                value=\"review\">\n                Review Correct Answer\n            </button>\n            */}\n\n            {/*\n\t\t\t<button\n                name=\"control\"\n                className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-mini ui-corner-all ui-btn-icon-right\"\n                id=\"controlBtn-close\"\n                value=\"close\">\n                Close\n            </button>*/}\n\n\n            {/*\n\t\t\t<button\n                name=\"control\"\n                className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-mini ui-corner-all ui-btn-icon-right\"\n                id=\"controlBtn-send-result\"\n                value=\"send-result\">\n                Send result\n            </button>*/}\n\n            {/*\n\t\t\t<button\n                name=\"control\"\n                className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-mini ui-corner-all ui-btn-icon-right\"\n                id=\"controlBtn-finish\"\n                value=\"finish\">\n                Finish\n            </button> */}\n\n            {/*\n\t\t\t<button\n                name=\"control\"\n                className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-mini ui-corner-all ui-btn-icon-right\"\n                id=\"controlBtn-redo\"\n                value=\"redo\">\n                Redo\n            </button> */}\n\n            {/*\n\t\t\t<button\n                name=\"control\"\n                className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-mini ui-corner-all ui-btn-icon-right\"\n                id=\"controlBtn-retry\"\n                value=\"retry\">\n            Retry</button>\n            */}\n        </div>\n    )\n}\n\nexport default Buttons","/Users/nutdranai.jaruthikorn/Desktop/itsc/quiz/src/PageManager.js",[],"/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/index.js",[],"/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/App.js",["109","110"],"/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/reportWebVitals.js",[],"/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/PageManager.js",[],"/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/Header.js",[],"/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/Instruction.js",["111"],"/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/Question.js",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127"],"/Users/nutdranai.jaruthikorn/Desktop/git-repo/quiz/src/Buttons.js",["128","129","130","131","132","133","134","135"],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":98,"column":29,"nodeType":"142","messageId":"143","endLine":98,"endColumn":31},{"ruleId":"140","severity":1,"message":"144","line":112,"column":81,"nodeType":"142","messageId":"143","endLine":112,"endColumn":83},{"ruleId":"140","severity":1,"message":"144","line":5,"column":24,"nodeType":"142","messageId":"143","endLine":5,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"141","line":12,"column":23,"nodeType":"142","messageId":"143","endLine":12,"endColumn":25},{"ruleId":"140","severity":1,"message":"144","line":20,"column":27,"nodeType":"142","messageId":"143","endLine":20,"endColumn":29},{"ruleId":"149","severity":1,"message":"150","line":20,"column":41,"nodeType":"151","endLine":20,"endColumn":75},{"ruleId":"140","severity":1,"message":"141","line":24,"column":27,"nodeType":"142","messageId":"143","endLine":24,"endColumn":29},{"ruleId":"140","severity":1,"message":"144","line":49,"column":45,"nodeType":"142","messageId":"143","endLine":49,"endColumn":47},{"ruleId":"140","severity":1,"message":"144","line":49,"column":59,"nodeType":"142","messageId":"143","endLine":49,"endColumn":61},{"ruleId":"140","severity":1,"message":"144","line":49,"column":122,"nodeType":"142","messageId":"143","endLine":49,"endColumn":124},{"ruleId":"140","severity":1,"message":"144","line":64,"column":62,"nodeType":"142","messageId":"143","endLine":64,"endColumn":64},{"ruleId":"140","severity":1,"message":"144","line":84,"column":40,"nodeType":"142","messageId":"143","endLine":84,"endColumn":42},{"ruleId":"140","severity":1,"message":"144","line":84,"column":69,"nodeType":"142","messageId":"143","endLine":84,"endColumn":71},{"ruleId":"140","severity":1,"message":"141","line":91,"column":27,"nodeType":"142","messageId":"143","endLine":91,"endColumn":29},{"ruleId":"140","severity":1,"message":"141","line":91,"column":55,"nodeType":"142","messageId":"143","endLine":91,"endColumn":57},{"ruleId":"140","severity":1,"message":"144","line":96,"column":109,"nodeType":"142","messageId":"143","endLine":96,"endColumn":111},{"ruleId":"140","severity":1,"message":"144","line":101,"column":109,"nodeType":"142","messageId":"143","endLine":101,"endColumn":111},{"ruleId":"140","severity":1,"message":"144","line":103,"column":33,"nodeType":"142","messageId":"143","endLine":103,"endColumn":35},{"ruleId":"136","replacedBy":"152"},{"ruleId":"138","replacedBy":"153"},{"ruleId":"145","severity":1,"message":"154","line":2,"column":7,"nodeType":"147","messageId":"148","endLine":2,"endColumn":15},{"ruleId":"140","severity":1,"message":"144","line":37,"column":42,"nodeType":"142","messageId":"143","endLine":37,"endColumn":44},{"ruleId":"145","severity":1,"message":"155","line":56,"column":7,"nodeType":"147","messageId":"148","endLine":56,"endColumn":10},{"ruleId":"140","severity":1,"message":"144","line":93,"column":81,"nodeType":"142","messageId":"143","endLine":93,"endColumn":83},{"ruleId":"140","severity":1,"message":"144","line":95,"column":38,"nodeType":"142","messageId":"143","endLine":95,"endColumn":40},{"ruleId":"140","severity":1,"message":"141","line":95,"column":71,"nodeType":"142","messageId":"143","endLine":95,"endColumn":73},{"ruleId":"140","severity":1,"message":"144","line":97,"column":38,"nodeType":"142","messageId":"143","endLine":97,"endColumn":40},{"ruleId":"140","severity":1,"message":"144","line":99,"column":38,"nodeType":"142","messageId":"143","endLine":99,"endColumn":40},{"ruleId":"140","severity":1,"message":"141","line":98,"column":29,"nodeType":"142","messageId":"143","endLine":98,"endColumn":31},{"ruleId":"140","severity":1,"message":"144","line":112,"column":81,"nodeType":"142","messageId":"143","endLine":112,"endColumn":83},{"ruleId":"140","severity":1,"message":"144","line":5,"column":24,"nodeType":"142","messageId":"143","endLine":5,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"141","line":12,"column":23,"nodeType":"142","messageId":"143","endLine":12,"endColumn":25},{"ruleId":"140","severity":1,"message":"144","line":20,"column":27,"nodeType":"142","messageId":"143","endLine":20,"endColumn":29},{"ruleId":"149","severity":1,"message":"150","line":20,"column":41,"nodeType":"151","endLine":20,"endColumn":75},{"ruleId":"140","severity":1,"message":"141","line":24,"column":27,"nodeType":"142","messageId":"143","endLine":24,"endColumn":29},{"ruleId":"140","severity":1,"message":"144","line":49,"column":45,"nodeType":"142","messageId":"143","endLine":49,"endColumn":47},{"ruleId":"140","severity":1,"message":"144","line":49,"column":59,"nodeType":"142","messageId":"143","endLine":49,"endColumn":61},{"ruleId":"140","severity":1,"message":"144","line":49,"column":122,"nodeType":"142","messageId":"143","endLine":49,"endColumn":124},{"ruleId":"140","severity":1,"message":"144","line":64,"column":62,"nodeType":"142","messageId":"143","endLine":64,"endColumn":64},{"ruleId":"140","severity":1,"message":"144","line":84,"column":40,"nodeType":"142","messageId":"143","endLine":84,"endColumn":42},{"ruleId":"140","severity":1,"message":"144","line":84,"column":69,"nodeType":"142","messageId":"143","endLine":84,"endColumn":71},{"ruleId":"140","severity":1,"message":"141","line":91,"column":27,"nodeType":"142","messageId":"143","endLine":91,"endColumn":29},{"ruleId":"140","severity":1,"message":"141","line":91,"column":55,"nodeType":"142","messageId":"143","endLine":91,"endColumn":57},{"ruleId":"140","severity":1,"message":"144","line":96,"column":109,"nodeType":"142","messageId":"143","endLine":96,"endColumn":111},{"ruleId":"140","severity":1,"message":"144","line":101,"column":109,"nodeType":"142","messageId":"143","endLine":101,"endColumn":111},{"ruleId":"140","severity":1,"message":"144","line":103,"column":33,"nodeType":"142","messageId":"143","endLine":103,"endColumn":35},{"ruleId":"145","severity":1,"message":"154","line":2,"column":7,"nodeType":"147","messageId":"148","endLine":2,"endColumn":15},{"ruleId":"140","severity":1,"message":"144","line":37,"column":42,"nodeType":"142","messageId":"143","endLine":37,"endColumn":44},{"ruleId":"145","severity":1,"message":"155","line":56,"column":7,"nodeType":"147","messageId":"148","endLine":56,"endColumn":10},{"ruleId":"140","severity":1,"message":"144","line":93,"column":81,"nodeType":"142","messageId":"143","endLine":93,"endColumn":83},{"ruleId":"140","severity":1,"message":"144","line":95,"column":38,"nodeType":"142","messageId":"143","endLine":95,"endColumn":40},{"ruleId":"140","severity":1,"message":"141","line":95,"column":71,"nodeType":"142","messageId":"143","endLine":95,"endColumn":73},{"ruleId":"140","severity":1,"message":"144","line":97,"column":38,"nodeType":"142","messageId":"143","endLine":97,"endColumn":40},{"ruleId":"140","severity":1,"message":"144","line":99,"column":38,"nodeType":"142","messageId":"143","endLine":99,"endColumn":40},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["156"],["157"],"'Previous' is assigned a value but never used.","'Log' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]